/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.logging.Level;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author 7heXiMiK
 */
public class Add extends javax.swing.JFrame {

    /**
     * @param PhotoPath the PhotoPath to set
     */
    public void setPhotoPath(String PhotoPath) {
        this.PhotoPath = PhotoPath;
    }

    /**
     * @param aNameB the nameB to set
     */
    public static void setNameB(String aNameB) {
        nameB = aNameB;
    }

    /**
     * @param aNameA the nameA to set
     */
    public static void setNameA(String aNameA) {
        nameA = aNameA;
    }

    /**
     * @param aInfo the Info to set
     */
    public static void setInfo(String aInfo) {
        Info = aInfo;
    }
    Main m = new Main();
    int xMouse;
    int yMouse;
    int admin = 0;
    private static String nameB = "";
    private static String nameA = "";
    private static String Info = "";
    private static String PhotoPath = "";

    /**
     * Creates new form Add
     */
    public Add() {
        initComponents();
        this.setLocationRelativeTo(null);
        if (nameB != "" && nameA != "" && Info != "") {
            txtNameBook.setText(nameB);
            txtNameA.setText(nameA);
            txtInfo.setText(Info);
            btnPhoto.setText("Змінити");
            btnSave.setText("Зберегти");
            try {
                PhotoPath = m.getPhotoPath();
                File file = new File(PhotoPath);
                setPhotoPath(file.getAbsolutePath());
                Image img = ImageIO.read(file);
                ImageIcon icon = new ImageIcon(ZoomImage(lblPhoto.getWidth(), lblPhoto.getHeight(), img));
                lblPhoto.setIcon(icon);

            } catch (Exception ex) {

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBookName2 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        pnlInfo = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lblPhoto = new javax.swing.JLabel();
        lblBookName = new javax.swing.JLabel();
        lblAvtor = new javax.swing.JLabel();
        lblInfo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtInfo = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtNameA = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtNameBook = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lblBookName1 = new javax.swing.JLabel();
        btnPhoto = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        lblBookName2.setBackground(new java.awt.Color(102, 102, 102));
        lblBookName2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblBookName2.setText("Категорія");

        jPasswordField1.setText("jPasswordField1");

        jPasswordField2.setText("jPasswordField2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        pnlInfo.setBackground(new java.awt.Color(102, 102, 102));

        jScrollPane4.setBackground(new java.awt.Color(102, 102, 102));
        jScrollPane4.setForeground(new java.awt.Color(102, 102, 102));

        lblPhoto.setBackground(new java.awt.Color(102, 102, 102));
        lblPhoto.setForeground(new java.awt.Color(102, 102, 102));
        lblPhoto.setMaximumSize(new java.awt.Dimension(299, 448));
        jScrollPane4.setViewportView(lblPhoto);

        lblBookName.setBackground(new java.awt.Color(102, 102, 102));
        lblBookName.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblBookName.setText("Назва книги");

        lblAvtor.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblAvtor.setText("Автор");

        lblInfo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblInfo.setText("Опис");

        txtInfo.setBackground(new java.awt.Color(102, 102, 102));
        txtInfo.setColumns(20);
        txtInfo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtInfo.setLineWrap(true);
        txtInfo.setRows(5);
        jScrollPane2.setViewportView(txtInfo);

        txtNameA.setBackground(new java.awt.Color(102, 102, 102));
        txtNameA.setColumns(20);
        txtNameA.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtNameA.setLineWrap(true);
        txtNameA.setRows(2);
        txtNameA.setAutoscrolls(false);
        jScrollPane3.setViewportView(txtNameA);

        txtNameBook.setBackground(new java.awt.Color(102, 102, 102));
        txtNameBook.setColumns(20);
        txtNameBook.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtNameBook.setLineWrap(true);
        txtNameBook.setRows(2);
        txtNameBook.setAutoscrolls(false);
        jScrollPane5.setViewportView(txtNameBook);

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setText("+");
        jButton1.setToolTipText("Збільшити масштаб");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setText("-");
        jButton2.setToolTipText("Зменшити масштаб");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lblBookName1.setBackground(new java.awt.Color(102, 102, 102));
        lblBookName1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblBookName1.setText("Фото");

        btnPhoto.setText("Обрати");
        btnPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPhotoActionPerformed(evt);
            }
        });

        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/logout.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btnSave.setText("Додати");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInfoLayout = new javax.swing.GroupLayout(pnlInfo);
        pnlInfo.setLayout(pnlInfoLayout);
        pnlInfoLayout.setHorizontalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addComponent(lblBookName1)
                        .addGap(35, 35, 35)
                        .addComponent(btnPhoto))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInfoLayout.createSequentialGroup()
                                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlInfoLayout.createSequentialGroup()
                                        .addGap(136, 136, 136)
                                        .addComponent(lblBookName))
                                    .addGroup(pnlInfoLayout.createSequentialGroup()
                                        .addGap(161, 161, 161)
                                        .addComponent(lblAvtor))
                                    .addGroup(pnlInfoLayout.createSequentialGroup()
                                        .addGap(166, 166, 166)
                                        .addComponent(lblInfo)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnlInfoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                                    .addComponent(jScrollPane3)
                                    .addComponent(jScrollPane2))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInfoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95))))
        );
        pnlInfoLayout.setVerticalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBookName1)
                    .addComponent(btnPhoto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12))
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addComponent(lblBookName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAvtor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlInfo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * Масштабування +
     *
     * @param evt
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            int w = lblPhoto.getWidth();
            int h = lblPhoto.getHeight();
            File file = new File(PhotoPath);
            Image img = ImageIO.read(file);
            ImageIcon icon = new ImageIcon(ZoomImage(w + 50, h + 50, img));
            lblPhoto.setIcon(icon);
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * Метод малювання фото
     *
     * @param w Ширина
     * @param h Висота
     * @param img Фото
     * @return фото
     */
    private Image ZoomImage(int w, int h, Image img) {
        BufferedImage buf = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
        Graphics2D grf = buf.createGraphics();
        grf.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        grf.drawImage(img, 0, 0, w, h, null);
        grf.dispose();
        return buf;
    }

    /**
     * Масштабування -
     *
     * @param evt
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            int w = lblPhoto.getWidth();
            int h = lblPhoto.getHeight();
            File file = new File(PhotoPath);
            Image img = ImageIO.read(file);
            ImageIcon icon = new ImageIcon(ZoomImage(w - 50, h - 50, img));
            lblPhoto.setIcon(icon);
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_jPanel2MouseDragged
    /**
     * Вибір фото
     *
     * @param evt
     */
    private void btnPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPhotoActionPerformed
        try {
            JFileChooser flChoos = new JFileChooser(System.getProperty("user.home"));
            flChoos.setFileSelectionMode(JFileChooser.FILES_ONLY);
            flChoos.setFileFilter(new FileNameExtensionFilter("jpg", "jpg"));
            if (flChoos.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = flChoos.getSelectedFile();
                FileFilter ff = new FileNameExtensionFilter("Image Files", "jpg");
                File jpg = new File(flChoos.getSelectedFile().toString());
                if (ff.accept(jpg)) {
                    setPhotoPath(file.getAbsolutePath());
                    Image img = ImageIO.read(file);
                    ImageIcon icon = new ImageIcon(ZoomImage(lblPhoto.getWidth(), lblPhoto.getHeight(), img));
                    lblPhoto.setIcon(icon);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Вибрано неправильний файл", "Помилка", 0);
                    File fileP = new File("eror.jpg");
                    Image img = ImageIO.read(fileP);
                    ImageIcon icon = new ImageIcon(ZoomImage(lblPhoto.getWidth(), lblPhoto.getHeight(), img));
                    lblPhoto.setIcon(icon);
                }
            }
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_btnPhotoActionPerformed
    /**
     * Збереження
     *
     * @param evt
     */
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        if (nameB != "" && nameA != "" && Info != "") {
            if (txtNameBook.getText().trim().length() <= 0 || txtNameA.getText().trim().length() <= 0
                    || txtNameBook.getText().trim().length() <= 0) {
                JOptionPane.showMessageDialog(rootPane, "Помилка");
            } else {
                if (txtNameBook.getText().indexOf("/") != -1 || txtNameBook.getText().indexOf('"') != -1 || txtNameBook.getText().indexOf("*") != -1 || txtNameBook.getText().indexOf(":") != -1 || txtNameBook.getText().indexOf(";") != -1 || txtNameBook.getText().indexOf("<") != -1 || txtNameBook.getText().indexOf(">") != -1 || txtNameBook.getText().indexOf(92) != -1) {
                     JOptionPane.showMessageDialog(rootPane, "Неправильно введена назва файлу\nНазва може містити цифри та букви англійського, українського та російського алфавіту", "Помилка", 0);
                } else {
                    try {
                        System.out.println(m.getPhotoPath());
                        if (m.getPhotoPath() != null && PhotoPath != m.getPhotoPath()) {
                            File f = new File(m.getPhotoPath());
                            m.recursiveDelete(f);
                        }
                        File file = new File("Categories\\" + m.getNameCat() + "\\" + m.getNameB());
                        File newFile = new File("Categories\\" + m.getNameCat() + "\\" + txtNameBook.getText());
                        if (file.renameTo(newFile)) {
                            System.out.println("Файл переименован успешно");
                            if (PhotoPath != m.getPhotoPath()) {
                                copyDir(PhotoPath, "Categories\\" + m.getNameCat() + "\\" + txtNameBook.getText() + "\\");
                            } else {
                            }
                            FileWriter nFile = new FileWriter("Categories\\" + m.getNameCat() + "\\" + txtNameBook.getText() + "\\Інформація.txt");
                            nFile.write(txtNameA.getText() + "\n");
                            nFile.write(txtInfo.getText());
                            nFile.close();
                            JOptionPane.showMessageDialog(rootPane, "Успішно");
                            dispose();
                            m.setAdmin(1);
                            m.setVisible(true);
                        } else {
                            System.out.println("Файл не был переименован");
                        }

                    } catch (Exception ex) {
                    }
                   
                }
            }
        } else {
            try {
                //Коооооооооод
                if (txtNameBook.getText().trim().length() <= 0 || txtNameA.getText().trim().length() <= 0
                        || txtNameBook.getText().trim().length() <= 0) {
                    JOptionPane.showMessageDialog(rootPane, "Помилка");
                } else {
                    if (txtNameBook.getText().indexOf("/") != -1 || txtNameBook.getText().indexOf('"') != -1 
                            || txtNameBook.getText().indexOf("*") != -1 || txtNameBook.getText().indexOf(":") != -1 
                            || txtNameBook.getText().indexOf(";") != -1 || txtNameBook.getText().indexOf("<") != -1 
                            || txtNameBook.getText().indexOf(">") != -1 || txtNameBook.getText().indexOf(92) != -1) 
                    {
                        JOptionPane.showMessageDialog(rootPane, "Неправильно введена назва файлу\nНазва може містити цифри та букви англійського, українського та російського алфавіту", "Помилка", 0);
                    } else {
                        File f = new File("Categories\\" + m.getNameCat() + "\\" + txtNameBook.getText());
                        if (f.exists() && f.isDirectory()) {
                            JOptionPane.showMessageDialog(rootPane, "Книга існує", "Помилка", 0);
                        } else {
                            if (PhotoPath == "") {
                                String[] btn = {"Так", "Ні"};
                                int a = JOptionPane.showOptionDialog(rootPane, "Продовжити без фотографії?", "Вибір фотографії",
                                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, btn, "OK");
                                if (a == 0) {
                                    new File("Categories\\" + m.getNameCat() + "\\" + txtNameBook.getText()).mkdirs();
                                    FileWriter nFile = new FileWriter("Categories\\" + m.getNameCat() + "\\" + txtNameBook.getText() + "\\Інформація.txt");
                                    nFile.write(txtNameA.getText() + "\n");
                                    nFile.write(txtInfo.getText());
                                    nFile.close();
                                    JOptionPane.showMessageDialog(rootPane, "Успішно");
                                    dispose();
                                    m.setAdmin(1);
                                    m.setVisible(true);
                                } else { }
                            } else {
                                new File("Categories\\" + m.getNameCat() + "\\" + txtNameBook.getText()).mkdirs();
                                copyDir(PhotoPath, "Categories\\" + m.getNameCat() + "\\" + txtNameBook.getText() + "\\");
                                FileWriter nFile = new FileWriter("Categories\\" + m.getNameCat() + "\\" + txtNameBook.getText() + "\\Інформація.txt");
                                nFile.write(txtNameA.getText() + "\n");
                                nFile.write(txtInfo.getText());
                                nFile.close();
                                JOptionPane.showMessageDialog(rootPane, "Успішно");
                                dispose();
                                m.setAdmin(1);
                                m.setVisible(true);
                            }

                        }
                        
                    }
                }
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnSaveActionPerformed
    /**
     * Вихі
     *
     * @param evt
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        nameA = "";
        nameB = "";
        Info = "";
        PhotoPath = "";
        dispose();
        m.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * Копіювання файлу
     *
     * @param sourceDirName Що копіювати
     * @param targetSourceDir Куди копіювати
     * @throws IOException
     */
    private static void copyDir(String sourceDirName, String targetSourceDir) throws IOException {
        File folder = new File(sourceDirName);

        // File listOfFiles = folder.listFiles();
        Path destDir = Paths.get(targetSourceDir);
        if (folder != null) {
            Files.copy(folder.toPath(), destDir.resolve(folder.getName()), StandardCopyOption.REPLACE_EXISTING);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPhoto;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblAvtor;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblBookName1;
    private javax.swing.JLabel lblBookName2;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JTextArea txtInfo;
    private javax.swing.JTextArea txtNameA;
    private javax.swing.JTextArea txtNameBook;
    // End of variables declaration//GEN-END:variables
}
