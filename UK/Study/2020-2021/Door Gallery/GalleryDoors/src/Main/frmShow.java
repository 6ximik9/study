/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author ximik
 */
public class frmShow extends javax.swing.JFrame {

    /**
     * @return the name
     */
    public static String getNames() {
        return names;
    }

    /**
     * @param aName the name to set
     */
    public static void setNames(String aName) {
        names = aName;
    }

    /**
     * @return the type
     */
    public static String getTypes() {
        return types;
    }

    /**
     * @param aType the type to set
     */
    public static void setType(String aType) {
        types = aType;
    }

    /**
     * @return the minInfo
     */
    public static String getMinInfo() {
        return minInfo;
    }

    /**
     * @param aMinInfo the minInfo to set
     */
    public static void setMinInfo(String aMinInfo) {
        minInfo = aMinInfo;
    }

    /**
     * @return the status
     */
    public static int getStatus() {
        return status;
    }

    /**
     * @param status the status to set
     */
    public static void setStatus(int statu) {
        status = statu;
    }

    private Connection conn = null;
    private DataB a = new DataB();
    static ResultSet X = null;
    static int status = 0;
    private static String names = "";
    private static String types = "";
    private static String nameT = "";
    private static String minInfo = "";
    Settings s = new Settings();
    String[] YesNo = new String[]{"Так", "Ні"};

    /**
     * Creates new form frmView
     */
    public frmShow() {
        initComponents();
        MoveMouseListener m = new MoveMouseListener(pnlHead, this);
        pnlHead.addMouseListener(m);
        pnlHead.addMouseMotionListener(m);
        this.setLocationRelativeTo(null);
        tbl.setDefaultEditor(Object.class, null);
        editColor(1);
        GetData("Door");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        pnlHead = new javax.swing.JPanel();
        btnExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pnlButtton = new javax.swing.JPanel();
        btnEdit = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        lblHead1 = new javax.swing.JLabel();
        pnlTable = new javax.swing.JPanel();
        btnDoor = new javax.swing.JButton();
        btnType = new javax.swing.JButton();
        btnMatherial = new javax.swing.JButton();
        btnStyle = new javax.swing.JButton();
        btnCoating = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlMain.setBackground(new java.awt.Color(143, 93, 100));

        pnlHead.setBackground(new java.awt.Color(143, 36, 72));
        pnlHead.setForeground(new java.awt.Color(221, 47, 85));

        btnExit.setBackground(new java.awt.Color(143, 36, 72));
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/close.png"))); // NOI18N
        btnExit.setBorder(null);
        btnExit.setBorderPainted(false);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Галерея дверей");

        javax.swing.GroupLayout pnlHeadLayout = new javax.swing.GroupLayout(pnlHead);
        pnlHead.setLayout(pnlHeadLayout);
        pnlHeadLayout.setHorizontalGroup(
            pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHeadLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1062, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlHeadLayout.setVerticalGroup(
            pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(pnlHeadLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)))
        );

        pnlButtton.setBackground(new java.awt.Color(143, 93, 100));
        pnlButtton.setLayout(new java.awt.GridLayout(3, 1, 0, 30));

        btnEdit.setBackground(new java.awt.Color(143, 36, 72));
        btnEdit.setFont(new java.awt.Font("Times New Roman", 0, 28)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/pencil-2.png"))); // NOI18N
        btnEdit.setText("Редагувати");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        pnlButtton.add(btnEdit);

        btnDel.setBackground(new java.awt.Color(143, 36, 72));
        btnDel.setFont(new java.awt.Font("Times New Roman", 0, 28)); // NOI18N
        btnDel.setForeground(new java.awt.Color(255, 255, 255));
        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/delete.png"))); // NOI18N
        btnDel.setText("Видалити");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        pnlButtton.add(btnDel);

        btnAdd.setBackground(new java.awt.Color(143, 36, 72));
        btnAdd.setFont(new java.awt.Font("Times New Roman", 0, 28)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/add.png"))); // NOI18N
        btnAdd.setText("Додати");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        pnlButtton.add(btnAdd);

        tbl.setBackground(new java.awt.Color(143, 93, 100));
        tbl.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tbl.setForeground(new java.awt.Color(0, 0, 0));
        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbl.setToolTipText("Клацніть два рази для \nперегляду детальної інформації");
        tbl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbl.setGridColor(new java.awt.Color(102, 204, 255));
        tbl.setRowHeight(40);
        tbl.setSelectionBackground(new java.awt.Color(143, 36, 72));
        tbl.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbl);

        txtSearch.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtSearch.setForeground(new java.awt.Color(0, 0, 0));
        txtSearch.setToolTipText("Пошук відбувається по всім полям\nВведіть запит та натисніть Enter");
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        lblHead1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblHead1.setForeground(new java.awt.Color(255, 255, 255));
        lblHead1.setText("Пошук");

        pnlTable.setBackground(new java.awt.Color(143, 93, 100));
        pnlTable.setLayout(new java.awt.GridLayout(1, 5, 10, 10));

        btnDoor.setBackground(new java.awt.Color(143, 36, 72));
        btnDoor.setFont(new java.awt.Font("Times New Roman", 0, 28)); // NOI18N
        btnDoor.setForeground(new java.awt.Color(255, 255, 255));
        btnDoor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/door.png"))); // NOI18N
        btnDoor.setText("Двері");
        btnDoor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoorActionPerformed(evt);
            }
        });
        pnlTable.add(btnDoor);

        btnType.setBackground(new java.awt.Color(143, 36, 72));
        btnType.setFont(new java.awt.Font("Times New Roman", 0, 28)); // NOI18N
        btnType.setForeground(new java.awt.Color(255, 255, 255));
        btnType.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/geometric.png"))); // NOI18N
        btnType.setText("Типи");
        btnType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTypeActionPerformed(evt);
            }
        });
        pnlTable.add(btnType);

        btnMatherial.setBackground(new java.awt.Color(143, 36, 72));
        btnMatherial.setFont(new java.awt.Font("Times New Roman", 0, 28)); // NOI18N
        btnMatherial.setForeground(new java.awt.Color(255, 255, 255));
        btnMatherial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/membrane.png"))); // NOI18N
        btnMatherial.setText("Матеріал");
        btnMatherial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMatherialActionPerformed(evt);
            }
        });
        pnlTable.add(btnMatherial);

        btnStyle.setBackground(new java.awt.Color(143, 36, 72));
        btnStyle.setFont(new java.awt.Font("Times New Roman", 0, 28)); // NOI18N
        btnStyle.setForeground(new java.awt.Color(255, 255, 255));
        btnStyle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/books.png"))); // NOI18N
        btnStyle.setText("Стилі");
        btnStyle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStyleActionPerformed(evt);
            }
        });
        pnlTable.add(btnStyle);

        btnCoating.setBackground(new java.awt.Color(143, 36, 72));
        btnCoating.setFont(new java.awt.Font("Times New Roman", 0, 28)); // NOI18N
        btnCoating.setForeground(new java.awt.Color(255, 255, 255));
        btnCoating.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/rack.png"))); // NOI18N
        btnCoating.setText("Покриття");
        btnCoating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCoatingActionPerformed(evt);
            }
        });
        pnlTable.add(btnCoating);

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlHead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlButtton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblHead1)
                    .addComponent(txtSearch))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                    .addContainerGap(207, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 928, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addComponent(pnlHead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(lblHead1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(pnlButtton, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlMainLayout.createSequentialGroup()
                    .addGap(53, 53, 53)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(81, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            PlugIn();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Помилка підключення");
            //btnUpdate.setVisible(true);
        }
    }//GEN-LAST:event_formWindowOpened

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        try {
            Search();
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_txtSearchKeyTyped

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        Search();
    }//GEN-LAST:event_txtSearchKeyPressed

    private void tblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMousePressed
        setNames(tbl.getModel().getValueAt(tbl.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblMousePressed

    private void tblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseEntered

    }//GEN-LAST:event_tblMouseEntered

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
        setNames(tbl.getModel().getValueAt(tbl.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblMouseClicked

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        if (getNames() != "") {
            if (nameT == "Door") {
                int rez = JOptionPane.showOptionDialog(null,
                        "Видалити двері: " + getNames() + "?",
                        "Видалення",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.INFORMATION_MESSAGE,
                        null,
                        YesNo,
                        "default");
                if (rez == 0) {
                    a.del("Door", "name", getNames());
                    JOptionPane.showMessageDialog(this, "Успішно", "Видалення", 1);
                    GetData("Door");
                    setNames("");
                }
            } else {
                int rez = JOptionPane.showOptionDialog(null,
                        "Видалити об'єкт з іменем: " + getNames() + "?",
                        "Видалення",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.INFORMATION_MESSAGE,
                        null,
                        YesNo,
                        "default");
                if (rez == 0) {
                    a.del(nameT, "name", getNames());
                    JOptionPane.showMessageDialog(this, "Успішно", "Видалення", 1);
                    GetData(nameT);
                    setNames("");
                }
            }

        }
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (status == 0) {
            if (getNames() != "") {
                if (nameT == "Door") {
                    AddP.setVariantStart(1);
                    AddP add = new AddP();
                    add.setVisible(true);
                    status = 1;
                } else {
                    Edit();
                }
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    void Edit() {
        String z = "";
        if (nameT == "Type") {
            z = JOptionPane.showInputDialog(rootPane, "Введіть нову назву для типу: " + getNames(), "Додавання",
                    JOptionPane.QUESTION_MESSAGE);

        } else if (nameT == "Style") {
            z = JOptionPane.showInputDialog(rootPane, "Введіть нову назву  для стилю: " + getNames(), "Додавання",
                    JOptionPane.QUESTION_MESSAGE);

        } else if (nameT == "Coating") {
            z = JOptionPane.showInputDialog(rootPane, "Введіть нову назву  для покриття: " + getNames(), "Додавання",
                    JOptionPane.QUESTION_MESSAGE);

        } else if (nameT == "Material") {
            z = JOptionPane.showInputDialog(rootPane, "Введіть нову назву  для метеріалу: " + getNames(), "Додавання",
                    JOptionPane.QUESTION_MESSAGE);

        }

        try {
            if (z.trim().length() > 0 && z.trim().length() < 35) {
                a.GetRep("name", z, nameT);
                if (a.getAddName() == "Такого нема" || z.equals(getNames())) {
                    try {
                        a.UpdateFilter(nameT, "name", z);
                        a.setAddName("Нема");
                        GetData(nameT);
                        JOptionPane.showMessageDialog(rootPane, "Успішно", "Додавання", 1);
                        setNames("");
                        a.setAddName("Такого нема");
                    } catch (Exception ex) {

                    }
                } else {
                    a.setAddName("Такого нема");
                    JOptionPane.showMessageDialog(rootPane, "Таке існує існує", "Помилка", 2);
                    Edit();
                }
            } else if (z.trim().length() > 35) {
                JOptionPane.showMessageDialog(rootPane, "Введено більше ніж 30 символів, повторіть спробу", "Помилка", 2);
                Edit();
            }
        } catch (Exception ex) {
        }

    }


    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (status == 0) {
            if (nameT == "Door") {
                AddP.setVariantStart(0);
                AddP add = new AddP();
                add.setVisible(true);
                status = 1;
            } else {
                add();
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    void add() {
        String z = "";
        if (nameT == "Type") {
            z = JOptionPane.showInputDialog(rootPane, "Введіть назву типу: " + getNames(), "Додавання",
                    JOptionPane.QUESTION_MESSAGE);

        } else if (nameT == "Style") {
            z = JOptionPane.showInputDialog(rootPane, "Введіть назву стилю: " + getNames(), "Додавання",
                    JOptionPane.QUESTION_MESSAGE);

        } else if (nameT == "Coating") {
            z = JOptionPane.showInputDialog(rootPane, "Введіть назву покриття: " + getNames(), "Додавання",
                    JOptionPane.QUESTION_MESSAGE);

        } else if (nameT == "Material") {
            z = JOptionPane.showInputDialog(rootPane, "Введіть назву метеріалу: " + getNames(), "Додавання",
                    JOptionPane.QUESTION_MESSAGE);

        }

        try {
            if (z.trim().length() > 0 && z.trim().length() < 35) {
                a.GetRep("name", z, nameT);
                if (a.getAddName() == "Такого нема" || z.equals(getNames())) {
                    try {
                        a.InsertDataFilter(nameT, "name", z);
                        a.setAddName("Нема");
                        GetData(nameT);
                        JOptionPane.showMessageDialog(rootPane, "Успішно", "Додавання", 1);
                        setNames("");
                        a.setAddName("Такого нема");
                    } catch (Exception ex) {

                    }
                } else {
                    a.setAddName("Такого нема");
                    JOptionPane.showMessageDialog(rootPane, "Таке існує існує", "Помилка", 2);
                    add();
                }
            } else if (z.trim().length() > 30) {
                JOptionPane.showMessageDialog(rootPane, "Введено більше ніж 30 символів, повторіть спробу", "Помилка", 2);
                add();
            }
        } catch (Exception ex) {
        }

    }

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnDoorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoorActionPerformed
        editColor(1);
        GetData("Door");
    }//GEN-LAST:event_btnDoorActionPerformed

    private void btnTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTypeActionPerformed
        editColor(2);
        GetData("Type");
    }//GEN-LAST:event_btnTypeActionPerformed

    private void btnStyleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStyleActionPerformed
        editColor(4);
        GetData("Style");
    }//GEN-LAST:event_btnStyleActionPerformed

    private void btnMatherialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMatherialActionPerformed
        editColor(3);
        GetData("Material");
    }//GEN-LAST:event_btnMatherialActionPerformed

    private void btnCoatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCoatingActionPerformed
        editColor(5);
        GetData("Coating");
    }//GEN-LAST:event_btnCoatingActionPerformed

    void editColor(int choose) {
        btnDoor.setBackground(new Color(143, 36, 72));
        btnMatherial.setBackground(new Color(143, 36, 72));
        btnStyle.setBackground(new Color(143, 36, 72));
        btnCoating.setBackground(new Color(143, 36, 72));
        btnType.setBackground(new Color(143, 36, 72));
        setNames("");
        txtSearch.setText("");
        if (choose == 1) {
            btnDoor.setBackground(new Color(255, 102, 102));
        } else if (choose == 2) {
            btnType.setBackground(new Color(255, 102, 102));
        } else if (choose == 3) {
            btnMatherial.setBackground(new Color(255, 102, 102));
        } else if (choose == 4) {
            btnStyle.setBackground(new Color(255, 102, 102));
        } else if (choose == 5) {
            btnCoating.setBackground(new Color(255, 102, 102));
        }
    }

    /**
     * Пошук
     */
    void Search() {
        if (nameT == "Door") {
            DataB db = new DataB();
            X = null;
            X = db.Search("Door", txtSearch.getText());
            int i = 0, ii = 1;
            try {
                ResultSetMetaData colonki = X.getMetaData();
                i = colonki.getColumnCount();
                javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
                dtm.setColumnCount(i);//
                String nazvaKolonki[] = new String[i];
                nazvaKolonki[0] = "Назва";
                nazvaKolonki[1] = "Призначення";
                nazvaKolonki[2] = "Тип";
                nazvaKolonki[3] = "Стиль";
                nazvaKolonki[4] = "Покриття";
                nazvaKolonki[5] = "Розмір";
                nazvaKolonki[6] = "Матеріал";
                dtm.setColumnIdentifiers(nazvaKolonki);
                dtm.setRowCount(0);//
                while (X.next()) {
                    dtm.setRowCount(dtm.getRowCount() + 1);
                    for (int j = 1; j <= i; j++) {
                        String g = X.getString(j);
                        dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модель
                    }
                    ii++;
                }
                tbl.setModel(dtm);

                final TableColumnModel columnModel = tbl.getColumnModel();
                for (int column = 0; column < tbl.getColumnCount(); column++) {
                    int width = 15; // Min width
                    for (int row = 0; row < tbl.getRowCount(); row++) {
                        TableCellRenderer renderer = tbl.getCellRenderer(row, column);
                        Component comp = tbl.prepareRenderer(renderer, row, column);
                        width = Math.max(comp.getPreferredSize().width + 1, width);
                    }
                    if (width > 300) {
                        width = 300;
                    }
                    columnModel.getColumn(column).setPreferredWidth(width);
                }
                tbl.getColumn("Назва").setCellRenderer(new myCellRenderer());

                int columnNumber = tbl.getColumnModel().getColumnCount();
                for (int c = 0; c < columnNumber; c++) {
                    tbl.getColumnModel().getColumn(c).setResizable(false);
                }
            } catch (Exception ex) {
                Logger.getLogger(frmShow.class.getName()).log(Level.SEVERE, null, ex);

            }
            db.finalize();
        } else {
            DataB db = new DataB();
            X = null;
            X = db.Search(nameT, txtSearch.getText());
            int i = 0, ii = 1;
            try {
                ResultSetMetaData colonki = X.getMetaData();
                i = colonki.getColumnCount();
                javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
                dtm.setColumnCount(i);//
                String nazvaKolonki[] = new String[i];
                nazvaKolonki[0] = "Назва";
                dtm.setColumnIdentifiers(nazvaKolonki);
                dtm.setRowCount(0);//
                while (X.next()) {
                    dtm.setRowCount(dtm.getRowCount() + 1);
                    for (int j = 1; j <= i; j++) {
                        String g = X.getString(j);
                        dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модель
                    }
                    ii++;
                }
                tbl.setModel(dtm);

                final TableColumnModel columnModel = tbl.getColumnModel();
                for (int column = 0; column < tbl.getColumnCount(); column++) {
                    int width = 15; // Min width
                    for (int row = 0; row < tbl.getRowCount(); row++) {
                        TableCellRenderer renderer = tbl.getCellRenderer(row, column);
                        Component comp = tbl.prepareRenderer(renderer, row, column);
                        width = Math.max(comp.getPreferredSize().width + 1, width);
                    }
                    if (width > 300) {
                        width = 300;
                    }
                    columnModel.getColumn(column).setPreferredWidth(width);
                }
                tbl.getColumn("Назва").setCellRenderer(new myCellRenderer());

                int columnNumber = tbl.getColumnModel().getColumnCount();
                for (int c = 0; c < columnNumber; c++) {
                    tbl.getColumnModel().getColumn(c).setResizable(false);
                }
            } catch (Exception ex) {
                Logger.getLogger(frmShow.class.getName()).log(Level.SEVERE, null, ex);

            }
            db.finalize();
        }
    }

    void PlugIn() {
        if (this.conn == null) {
            a.finalize();
            a = null;
            a = new DataB();
            conn = a.Connect();
            if (conn == null) {
                // btnUpdate.setVisible(true);
            } else {
                // btnUpdate.setVisible(false);
                GetData("Door");
                // JOptionPane.showMessageDialog(this, "Заєбісь");
            }
        }
    }

    /**
     * Отримання даних
     *
     * @param nameT ім'я таблиці
     */
    public static void GetData(String nameT) {
        frmShow.nameT = nameT;
        DataB db = new DataB();
        if (nameT == "Door") {
            X = null;
            X = db.GetDataSet(nameT);
            int i = 0, ii = 1;
            try {
                ResultSetMetaData colonki = X.getMetaData();
                i = colonki.getColumnCount();
                javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
                dtm.setColumnCount(i);//
                String nazvaKolonki[] = new String[i];
                nazvaKolonki[0] = "Назва";
                nazvaKolonki[1] = "Призначення";
                nazvaKolonki[2] = "Тип";
                nazvaKolonki[3] = "Стиль";
                nazvaKolonki[4] = "Покриття";
                nazvaKolonki[5] = "Розмір";
                nazvaKolonki[6] = "Матеріал";
                dtm.setColumnIdentifiers(nazvaKolonki);
                dtm.setRowCount(0);//
                while (X.next()) {
                    dtm.setRowCount(dtm.getRowCount() + 1);
                    for (int j = 1; j <= i; j++) {
                        String g = X.getString(j);
                        dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модель
                    }
                    ii++;
                }
                tbl.setModel(dtm);

                final TableColumnModel columnModel = tbl.getColumnModel();
                for (int column = 0; column < tbl.getColumnCount(); column++) {
                    int width = 15; // Min width
                    for (int row = 0; row < tbl.getRowCount(); row++) {
                        TableCellRenderer renderer = tbl.getCellRenderer(row, column);
                        Component comp = tbl.prepareRenderer(renderer, row, column);
                        width = Math.max(comp.getPreferredSize().width + 1, width);
                    }
                    if (width > 300) {
                        width = 300;
                    }
                    columnModel.getColumn(column).setPreferredWidth(width);
                }
                tbl.getColumn("Назва").setCellRenderer(new myCellRenderer());
                tbl.getColumn("Призначення").setCellRenderer(new myCellRenderer());
                tbl.getColumn("Тип").setCellRenderer(new myCellRenderer());
                tbl.getColumn("Стиль").setCellRenderer(new myCellRenderer());
                tbl.getColumn("Покриття").setCellRenderer(new myCellRenderer());
                tbl.getColumn("Розмір").setCellRenderer(new myCellRenderer());
                tbl.getColumn("Матеріал").setCellRenderer(new myCellRenderer());

                int columnNumber = tbl.getColumnModel().getColumnCount();
                for (int c = 0; c < columnNumber; c++) {
                    tbl.getColumnModel().getColumn(c).setResizable(false);
                }
            } catch (Exception ex) {
                Logger.getLogger(frmShow.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else {
            X = null;
            X = db.GetDataSet(nameT);
            int i = 0, ii = 1;
            try {
                ResultSetMetaData colonki = X.getMetaData();
                i = colonki.getColumnCount();
                javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
                dtm.setColumnCount(i);//
                String nazvaKolonki[] = new String[i];
                nazvaKolonki[0] = "Назва";
                dtm.setColumnIdentifiers(nazvaKolonki);
                dtm.setRowCount(0);//
                while (X.next()) {
                    dtm.setRowCount(dtm.getRowCount() + 1);
                    for (int j = 1; j <= i; j++) {
                        String g = X.getString(j);
                        dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модель
                    }
                    ii++;
                }
                tbl.setModel(dtm);

                final TableColumnModel columnModel = tbl.getColumnModel();
                for (int column = 0; column < tbl.getColumnCount(); column++) {
                    int width = 15; // Min width
                    for (int row = 0; row < tbl.getRowCount(); row++) {
                        TableCellRenderer renderer = tbl.getCellRenderer(row, column);
                        Component comp = tbl.prepareRenderer(renderer, row, column);
                        width = Math.max(comp.getPreferredSize().width + 1, width);
                    }
                    if (width > 300) {
                        width = 300;
                    }
                    columnModel.getColumn(column).setPreferredWidth(width);
                }
                tbl.getColumn("Назва").setCellRenderer(new myCellRenderer());

                int columnNumber = tbl.getColumnModel().getColumnCount();
                for (int c = 0; c < columnNumber; c++) {
                    tbl.getColumnModel().getColumn(c).setResizable(false);
                }
            } catch (Exception ex) {
                Logger.getLogger(frmShow.class.getName()).log(Level.SEVERE, null, ex);

            }
        }
    }

    private static class myCellRenderer extends JTextArea implements TableCellRenderer {

        myCellRenderer() {
            setLineWrap(true);
            setWrapStyleWord(true);
        }

        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setText(value.toString());
            setSize(table.getColumnModel().getColumn(column).getWidth(), getPreferredSize().height);
            if (table.getRowHeight(row) != getPreferredSize().height) {
                table.setRowHeight(row, getPreferredSize().height);
                Font font = new Font("Times New Roman", Font.PLAIN, 18);
                this.setFont(font);
            }
            if (!isSelected == true) {
                this.setBackground(new Color(143, 93, 100));
                this.setForeground(Color.BLACK);
            } else {
                this.setBackground(new Color(255, 102, 102));
                this.setForeground(Color.white);
            }
            return this;
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmShow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCoating;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnDoor;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnMatherial;
    private javax.swing.JButton btnStyle;
    private javax.swing.JButton btnType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHead1;
    private javax.swing.JPanel pnlButtton;
    private javax.swing.JPanel pnlHead;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlTable;
    public static javax.swing.JTable tbl;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
