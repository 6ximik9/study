
package Main;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/**
 *
 * @author Rahmans
 */
public class Main extends javax.swing.JFrame {

    /**
     * @return the nameB
     */
    public String getNameB() {
        return nameB;
    }

    /**
     * @return the PhotoPath
     */
    public String getPhotoPath() {
        return PhotoPath;
    }

    /**
     * @return the nameCat
     */
    public String getNameCat() {
        return nameCat;
    }

    /**
     * @param admin the admin to set
     */
    public void setAdmin(int admin) {
        this.admin = admin;
    }
    public static String choice = "";
    public static ArrayList<String> mapList = new ArrayList<String>();
    ArrayList<String> list = new ArrayList<>();
    final JScrollPane scrollPane = new JScrollPane();
    boolean levelsExistAlready = false;
    int xMouse;
    int yMouse;
    String ext = ".jpg";
    String ext2 = ".txt";
    private static String nameCat = "";
    private static String PhotoPath;
    private static String nameB;
    int v = 0;
    static String info = "";
    private static int admin = 0;
    public static int level = 0;

    public Main() {
        initComponents();
        pnlInfo.setVisible(false);
        pnlAdmin.setVisible(false);
        setBackground(new Color(0, 0, 0, 0));
//        tfSearch.setBackground(new Color(0, 0, 0, 0));
        Categories();
        btnEdit.setVisible(false);
        if (admin == 1) {
            pnlAdmin.setVisible(true);
            jLabel3.setVisible(false);
            lblLogout.setVisible(false);
        }
        getMapList(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblLogout = new javax.swing.JLabel();
        pnlMenu = new javax.swing.JPanel();
        btnExit = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        pnlAdmin = new javax.swing.JPanel();
        btnEdit = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnlAll = new javax.swing.JPanel();
        pnlInfo = new javax.swing.JPanel();
        JSPPhoto = new javax.swing.JScrollPane();
        lblPhoto = new javax.swing.JLabel();
        lblBookName = new javax.swing.JLabel();
        lblAvtor = new javax.swing.JLabel();
        lblInfo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtInfo = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtNameA = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtNameBook = new javax.swing.JTextArea();
        btnP = new javax.swing.JButton();
        btnM = new javax.swing.JButton();
        btnD = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setSize(new java.awt.Dimension(1000, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("Нотатник книголюба");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 380, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("Ви адміністратор?");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 10, 140, 30));

        lblLogout.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblLogout.setForeground(new java.awt.Color(51, 102, 255));
        lblLogout.setText("Підтвердити");
        lblLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLogoutMouseClicked(evt);
            }
        });
        getContentPane().add(lblLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 10, 110, 30));

        pnlMenu.setBackground(new java.awt.Color(102, 102, 102));
        pnlMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnExit.setBackground(new java.awt.Color(102, 102, 102));
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/logout.png"))); // NOI18N
        btnExit.setToolTipText("Видалити");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        pnlMenu.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 0, 50, 40));

        jButton4.setBackground(new java.awt.Color(102, 102, 102));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/undo.png"))); // NOI18N
        jButton4.setToolTipText("Назад");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        pnlMenu.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 0, 50, 40));

        pnlAdmin.setBackground(new java.awt.Color(102, 102, 102));

        btnEdit.setBackground(new java.awt.Color(102, 102, 102));
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/edit.png"))); // NOI18N
        btnEdit.setToolTipText("Редагувати");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(102, 102, 102));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/plus (1).png"))); // NOI18N
        btnAdd.setToolTipText("Додати");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete1.setBackground(new java.awt.Color(102, 102, 102));
        btnDelete1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/delete.png"))); // NOI18N
        btnDelete1.setToolTipText("Видалити");
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAdminLayout = new javax.swing.GroupLayout(pnlAdmin);
        pnlAdmin.setLayout(pnlAdminLayout);
        pnlAdminLayout.setHorizontalGroup(
            pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );
        pnlAdminLayout.setVerticalGroup(
            pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminLayout.createSequentialGroup()
                .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnDelete1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pnlMenu.add(pnlAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 280, -1));

        getContentPane().add(pnlMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 1000, 40));

        jScrollPane1.setBackground(new java.awt.Color(102, 102, 102));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        pnlAll.setBackground(new java.awt.Color(102, 102, 102));
        pnlAll.setLayout(new java.awt.GridLayout(0, 1));
        jScrollPane1.setViewportView(pnlAll);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 300, 480));

        pnlInfo.setBackground(new java.awt.Color(102, 102, 102));

        JSPPhoto.setBackground(new java.awt.Color(102, 102, 102));
        JSPPhoto.setForeground(new java.awt.Color(102, 102, 102));

        lblPhoto.setBackground(new java.awt.Color(102, 102, 102));
        lblPhoto.setForeground(new java.awt.Color(102, 102, 102));
        lblPhoto.setMaximumSize(new java.awt.Dimension(299, 448));
        JSPPhoto.setViewportView(lblPhoto);

        lblBookName.setBackground(new java.awt.Color(102, 102, 102));
        lblBookName.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblBookName.setText("Назва книги");

        lblAvtor.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblAvtor.setText("Автор");

        lblInfo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblInfo.setText("Опис");

        txtInfo.setEditable(false);
        txtInfo.setBackground(new java.awt.Color(102, 102, 102));
        txtInfo.setColumns(20);
        txtInfo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtInfo.setLineWrap(true);
        txtInfo.setRows(5);
        jScrollPane2.setViewportView(txtInfo);

        txtNameA.setEditable(false);
        txtNameA.setBackground(new java.awt.Color(102, 102, 102));
        txtNameA.setColumns(20);
        txtNameA.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtNameA.setLineWrap(true);
        txtNameA.setRows(2);
        txtNameA.setAutoscrolls(false);
        jScrollPane3.setViewportView(txtNameA);

        txtNameBook.setEditable(false);
        txtNameBook.setBackground(new java.awt.Color(102, 102, 102));
        txtNameBook.setColumns(20);
        txtNameBook.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtNameBook.setLineWrap(true);
        txtNameBook.setRows(2);
        txtNameBook.setAutoscrolls(false);
        jScrollPane5.setViewportView(txtNameBook);

        btnP.setBackground(new java.awt.Color(102, 102, 102));
        btnP.setText("+");
        btnP.setToolTipText("Збільшити масштаб");
        btnP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPActionPerformed(evt);
            }
        });

        btnM.setBackground(new java.awt.Color(102, 102, 102));
        btnM.setText("-");
        btnM.setToolTipText("Зменшити масштаб");
        btnM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMActionPerformed(evt);
            }
        });

        btnD.setBackground(new java.awt.Color(102, 102, 102));
        btnD.setText("За замовчуванням");
        btnD.setToolTipText("Зменшити масштаб");
        btnD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInfoLayout = new javax.swing.GroupLayout(pnlInfo);
        pnlInfo.setLayout(pnlInfoLayout);
        pnlInfoLayout.setHorizontalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JSPPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addComponent(btnP, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnM, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnD)))
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(1291, 1291, 1291))
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInfoLayout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(lblBookName))
                            .addGroup(pnlInfoLayout.createSequentialGroup()
                                .addGap(145, 145, 145)
                                .addComponent(lblAvtor))
                            .addGroup(pnlInfoLayout.createSequentialGroup()
                                .addGap(154, 154, 154)
                                .addComponent(lblInfo)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlInfoLayout.setVerticalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addComponent(lblBookName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAvtor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)
                        .addGap(13, 13, 13))
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addComponent(JSPPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(12, 12, 12))))
        );

        getContentPane().add(pnlInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 660, 480));

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/Background2.png"))); // NOI18N
        lblBackground.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lblBackgroundMouseDragged(evt);
            }
        });
        lblBackground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblBackgroundMousePressed(evt);
            }
        });
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        setSize(new java.awt.Dimension(1000, 596));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblBackgroundMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackgroundMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_lblBackgroundMousePressed
/**
 * Переміщення вікна
 * @param evt 
 */
    private void lblBackgroundMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackgroundMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_lblBackgroundMouseDragged
/**
 * Підтвердження
 * @param evt 
 */
    private void lblLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseClicked
        String pass = JOptionPane.showInputDialog(this, "Введіть пароль"," Підтвердження", 3);
        if(pass!=null)
        {
        if (pass.equals("admin")) {
            JOptionPane.showMessageDialog(rootPane, "Успішно");
            jLabel3.setVisible(false);
            lblLogout.setVisible(false);
            pnlAdmin.setVisible(true);
            setAdmin(1);
        }
        }
        else{}
    }//GEN-LAST:event_lblLogoutMouseClicked
/**
 * Збільшення масштабу
 * @param evt 
 */
    private void btnPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPActionPerformed
        try {
            int w = lblPhoto.getWidth();
            int h = lblPhoto.getHeight();
            File file = new File(getPhotoPath());
            Image img = ImageIO.read(file);
            ImageIcon icon = new ImageIcon(ZoomImage(w + 50, h + 50, img));
            lblPhoto.setIcon(icon);
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_btnPActionPerformed
/**
 * Зменшення масштабу
 * @param evt 
 */
    private void btnMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMActionPerformed
        try {
            int w = lblPhoto.getWidth();
            int h = lblPhoto.getHeight();
            File file = new File(getPhotoPath());
            Image img = ImageIO.read(file);
            ImageIcon icon = new ImageIcon(ZoomImage(w - 50, h - 50, img));
            lblPhoto.setIcon(icon);
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_btnMActionPerformed
/**
 * Назад
 * @param evt 
 */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (v == 1) {
            btnEdit.setVisible(false);
            pnlInfo.setVisible(false);
            pnlAll.removeAll();
            Categories();
            pnlAll.updateUI();
            v = 0;
            System.out.println("ыва");
        }
    }//GEN-LAST:event_jButton4ActionPerformed
/**
 * Додавання категорії
 * @param evt 
 */
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (v == 0) {
            String text = JOptionPane.showInputDialog(rootPane, "Введіть назву категорії", "Додавання",
                    JOptionPane.QUESTION_MESSAGE);
            if (text == null) {
            } else if (text.trim().length() > 0 ) {
                if(text.indexOf("/")!=-1||text.indexOf('"')!=-1||text.indexOf("*")!=-1||text.indexOf(":")!=-1||text.indexOf(";")!=-1||text.indexOf("<")!=-1||text.indexOf(">")!=-1||text.indexOf(92)!=-1)
                {
                    JOptionPane.showMessageDialog(rootPane, "Неправильно введена назва файлу\nНазва файлу може містити цифри та букви англійського, українського та російського алфавіту", "Помилка", 0);
                }
                else{
                File f = new File("Categories\\" + text);
                if (f.exists() && f.isDirectory()) {
                    JOptionPane.showMessageDialog(rootPane, "Неправильно введена назва файлу", "Помилка", 0);
                } else {
                    new File("Categories\\" + text).mkdirs();
                    Categories();
                    JOptionPane.showMessageDialog(rootPane, "Успішно");
                }
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Неправильно введена назва файлу\nНазва може містити цифри та букви англійського, українського та російського алфавіту", "Помилка", 0);
            }
        } else if (v == 1) {
            Add a = new Add();
            a.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed
/**
 * Редагування
 * @param evt 
 */
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        Add a = null;
        a.setNameB(txtNameBook.getText());
        a.setNameA(txtNameA.getText());
        a.setInfo(txtInfo.getText());
        //System.out.println(PhotoPath);
        // a.setPhotoPath(PhotoPath);
        a = new Add();
        this.setVisible(false);
        a.setVisible(true);
    }//GEN-LAST:event_btnEditActionPerformed
/**
 * Видалення
 * @param file 
 */
    public static void recursiveDelete(File file) {
        if (!file.exists()) {
            return;
        }
        if (file.isDirectory()) {
            for (File f : file.listFiles()) {
                recursiveDelete(f);
            }
        }
        file.delete();
    }
/**
 * Отримання Категорій
 * @param m 
 */
    public void getMapList(int m) {
        File myFolder = null;
        if (m == 0) {
            myFolder = new File("Categories");
        } else if (m == 1) {
            myFolder = new File("Categories//" + getNameCat());
        }
        File[] files = myFolder.listFiles();
        mapList.clear();
        for (int i = 0; i < files.length; i++) {
            mapList.add(files[i].getName());
            System.out.println(mapList.get(i));
        }
        levelsExistAlready = true;
    }
/**
 * Вибір
 * @return 
 */
    String getLevelChoice() {
        if (levelsExistAlready) {
            String maps[] = new String[mapList.size() + 15];
            mapList.toArray(maps);
            choice = (String) JOptionPane.showInputDialog(null, "Що ви хочете видалити?", "Видалення", JOptionPane.QUESTION_MESSAGE, null, maps, maps[0]);
            System.out.println(choice);
            if (choice != null) {
                return choice;
            } else if (choice == null) {
                return null;
            }
        }
        return null;
    }
/**
 * Стандартний масштаб
 * @param evt 
 */
    private void btnDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDActionPerformed
        try {
            File file = new File("Categories//" + getNameCat() + "//" + getNameB());
            File[] listFiles = file.listFiles(new MyFileNameFilter(ext));
            PhotoPath = listFiles[0].getAbsolutePath();
            File fileP = new File(getPhotoPath());
            Image img = ImageIO.read(fileP);
            System.out.println(lblPhoto.getWidth());
            System.out.println(lblPhoto.getHeight());
            ImageIcon icon = new ImageIcon(ZoomImage(312, 418, img));
            PhotoPath = listFiles[0].getAbsolutePath();
            lblPhoto.setIcon(icon);
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDActionPerformed
/**
 * Кнопка видалення
 * @param evt 
 */
    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
        if (v == 0) {
            getMapList(0);
            String n = getLevelChoice();
            if(n!=null)
            {
            File f = new File("Categories\\" + n);
            recursiveDelete(f);
            JOptionPane.showMessageDialog(rootPane, "Успішно");
            Categories();
            }
            else{}
        } else if (v == 1) {
            getMapList(1);
            String n = getLevelChoice();
            if(n!=null)
            {
            File f = new File("Categories\\" + getNameCat() + "\\" + n);
            recursiveDelete(f);
            JOptionPane.showMessageDialog(rootPane, "Успішно");
            pnlInfo.setVisible(false);
            btnEdit.setVisible(false);
            Book(getNameCat());
            }
            else{}
        }
    }//GEN-LAST:event_btnDelete1ActionPerformed

    private static void copyFile(File source, File dest) throws IOException {
        Files.copy(source.toPath(), dest.toPath());
    }
/**
 * Створення кнопки 
 * @param name Ім'я кнопки
 * @param variant Варіант роботи
 * @return 
 */
    JButton CreateBtn(String name, int variant) {
        JButton b = new JButton(name);
        b.setPreferredSize(new Dimension(200, 50));
        b.setBackground(new Color(102, 102, 102));
        Font BigFontTR = new Font("TimesRoman", Font.BOLD, 14);
        b.setFont(BigFontTR);
        b.setVisible(true);
        b.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if (variant == 0) {
                    nameCat = b.getText();
                    Book(b.getText());
                    v = 1;
                } else if (variant == 1) {
                    File file = new File("Categories//" + getNameCat() + "//" + b.getText());
                    File[] listFiles = file.listFiles(new MyFileNameFilter(ext));
                    File[] listFilesT = file.listFiles(new MyFileNameFilter(ext2));
                    nameB = b.getText();
                    try {
                        if (listFiles.length > 0) {
                            btnD.setVisible(true);
                            btnM.setVisible(true);
                            btnP.setVisible(true);
                            PhotoPath = listFiles[0].getAbsolutePath();
                            File fileP = new File(getPhotoPath());
                            Image img = ImageIO.read(fileP);
                            ImageIcon icon = new ImageIcon(ZoomImage(lblPhoto.getWidth(), lblPhoto.getHeight(), img));
                            PhotoPath = listFiles[0].getAbsolutePath();
                            lblPhoto.setIcon(icon);
                        } else {
                            File fileP = new File("eror.jpg");
                            Image img = ImageIO.read(fileP);
                            ImageIcon icon = new ImageIcon(ZoomImage(lblPhoto.getWidth(), lblPhoto.getHeight(), img));
                            lblPhoto.setIcon(icon);
                            btnD.setVisible(false);
                            btnM.setVisible(false);
                            btnP.setVisible(false);
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    try (Scanner scan = new Scanner(new File(listFilesT[0].getAbsolutePath()))) {
                        while (scan.hasNextLine()) {
                            list.add(scan.nextLine());
                        }
                    } catch (Exception ex) {
                        System.out.println("Файлу нема");
                    }
                    txtNameBook.setText(b.getText());
                    txtNameA.setText(list.get(0));
                    txtInfo.setText(null);
                    for (int i = 1; i < list.size(); i++) {
                        txtInfo.setText(txtInfo.getText() + list.get(i) + "\n");
                    }
                    btnEdit.setVisible(true);
                    txtInfo.setCaretPosition(0);
                    txtNameA.setCaretPosition(0);
                    txtNameBook.setCaretPosition(0);
                    pnlInfo.setVisible(true);
                    list.clear();
                }

            }
        });

        return b;
    }
/**
 * Фільтр для отримання даних
 */
    public static class MyFileNameFilter implements FilenameFilter {

        private String ext;

        public MyFileNameFilter(String ext) {
            this.ext = ext.toLowerCase();
        }

        @Override
        public boolean accept(File dir, String name) {
            return name.toLowerCase().endsWith(ext);
        }
    }
/**
 * Загрузка категорій
 */
    void Categories() {
        pnlAll.removeAll();
        File myFolder = new File("Categories");
        if(myFolder.exists())
        {
        
        }
        else
        {
             new File("Categories").mkdirs();
        }
        File[] files = myFolder.listFiles();
        for (int i = 0; i < files.length; i++) {
            pnlAll.add(CreateBtn(files[i].getName(), 0));
        }
        pnlAll.updateUI();
    }

    void Book(String name) {
        pnlAll.removeAll();
        File myFolder = new File("Categories//" + name);
        File[] files = myFolder.listFiles();
        for (int i = 0; i < files.length; i++) {
            pnlAll.add(CreateBtn(files[i].getName(), 1));
        }
        pnlAll.updateUI();
    }
/**
 * Метод малювання фото
 * @param w Ширина
 * @param h Висота
 * @param img Фото
 * @return фото
 */
    private Image ZoomImage(int w, int h, Image img) {
        BufferedImage buf = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
        Graphics2D grf = buf.createGraphics();
        grf.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        grf.drawImage(img, 0, 0, w, h, null);
        grf.dispose();
        return buf;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JSPPhoto;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnD;
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnM;
    private javax.swing.JButton btnP;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblAvtor;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JLabel lblLogout;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JPanel pnlAdmin;
    private javax.swing.JPanel pnlAll;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JTextArea txtInfo;
    private javax.swing.JTextArea txtNameA;
    private javax.swing.JTextArea txtNameBook;
    // End of variables declaration//GEN-END:variables
}
