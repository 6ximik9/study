/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DataBase;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.InputEvent;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import static javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author 7heXiMiK
 */
public class Viev extends javax.swing.JFrame {

    /**
     * @param aPathPhoto the pathPhoto to set
     */
    public static void setPathPhoto(String aPathPhoto) {
        pathPhoto = aPathPhoto;
    }

    /**
     * @param aIdProperty the idProperty to set
     */
    public static void setIdProperty(int aIdProperty) {
        idProperty = aIdProperty;
    }

    /**
     * @return the idProperty
     */
    public static int getIdProperty() {
        return idProperty;
    }

    

    /**
     * @return the idDel
     */
    public int getIdDel() {
        return idDel;
    }

    /**
     * @param idDel the idDel to set
     */
    public void setIdDel(int idDel) {
        this.idDel = idDel;
    }

    /**
     * @param aStart the start to set
     */
    public static void setStart(int aStart) {
        start = aStart;
    }

    /**
     * @return the pathPhoto
     */
    public static String getPathPhoto() {
        return pathPhoto;
    }

    /**
     * @param aYear the year to set
     */
    public static void setYear(String aYear) {
        year = aYear;
    }

    /**
     * @return the year
     */
    public String getYear() {
        return year;
    }

private static String year = "";
    
    /**
     * @return the bornSplit
     */
    public String getBornSplit(int i) {
        return bornSplit[i];
    }

    /**
     * @return the deadSplit
     */
    public String getDeadSplit(int i) {
        return deadSplit[i];
    }
private static String[] bornSplit=null;
private static String[] deadSplit=null;
  

    /**
     * @return the rel
     */
    public static String getRel() {
        return rel;
    }

    /**
     * @return the educat
     */
    public static String getEducat() {
        return educat;
    }

    /**
     * @return the biog
     */
    public static String getBiog() {
        return biog;
    }

    /**
     * @return the name
     */
    public  String getName() {
        return name;
    }
    
    /**
     * @return the start
     */
    public static int getStart() {
        return start;
    }
ResultSet X=null;
private static int start = 0;
private static int idPeron = 0;
private static String nameBranch = "";
private static String name = "";
private static String born="";
private static String dead="";
private static String rel = "";
private static String educat ="";
private static String biog = "";
private static String pathPhoto = "";
private static int idProperty = 0;
static String data = "";
static int why =0;
static String nameCat = "";

JLabel lbl = null;
int id=0;
private static int idDel =0;
String nameTbl= "";
JTextArea txt;
String nameObj = "";

    /**
     * Creates new form Viev
     */
    public Viev() {
        initComponents();
        this.setLocationRelativeTo(null);//center screen
        MoveMouseListener mml = new MoveMouseListener(pnlHead, this);
        pnlHead.addMouseListener(mml);
        pnlHead.addMouseMotionListener(mml);
        btnAdd.setVisible(false);
        btnDel.setVisible(false);
        btnEdit.setVisible(false);
        btnUpdate.setVisible(false);
        tbl.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        tbl.getTableHeader().setOpaque(false);
        tbl.getTableHeader().setBackground(new Color(32,136,203));
        tbl.getTableHeader().setForeground(new Color(255,255,255));
        tbl.setRowHeight(25);
        btnDel.setVisible(false);
        btnSearch.setVisible(false);
        btnSort.setVisible(false);
        lblSort.setVisible(false);
        jBoxSort.setVisible(false);
        tbl.setDefaultEditor(Object.class, null);
        tbl.setToolTipText("Підказка: Розміри колонок можна змінювати мишкою");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlHead = new javax.swing.JPanel();
        pnlMenu = new javax.swing.JPanel();
        pnlBranch = new javax.swing.JPanel();
        lblBranch = new javax.swing.JLabel();
        pnlCategories = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        pnlPersonality = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        pnlProperty = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        pnlUsers = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jBoxSort = new javax.swing.JComboBox<>();
        lblSort = new javax.swing.JLabel();
        btnSort = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        pnlHead.setBackground(new java.awt.Color(255, 255, 255));

        pnlMenu.setBackground(new java.awt.Color(152, 73, 222));
        pnlMenu.setPreferredSize(new java.awt.Dimension(224, 696));

        pnlBranch.setBackground(new java.awt.Color(85, 63, 118));
        pnlBranch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlBranchMouseClicked(evt);
            }
        });

        lblBranch.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        lblBranch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/banco.png"))); // NOI18N
        lblBranch.setText(" Галузь");

        javax.swing.GroupLayout pnlBranchLayout = new javax.swing.GroupLayout(pnlBranch);
        pnlBranch.setLayout(pnlBranchLayout);
        pnlBranchLayout.setHorizontalGroup(
            pnlBranchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(pnlBranchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBranchLayout.createSequentialGroup()
                    .addComponent(lblBranch, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        pnlBranchLayout.setVerticalGroup(
            pnlBranchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 78, Short.MAX_VALUE)
            .addGroup(pnlBranchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblBranch, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))
        );

        pnlCategories.setBackground(new java.awt.Color(85, 63, 118));
        pnlCategories.setPreferredSize(new java.awt.Dimension(224, 78));
        pnlCategories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCategoriesMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/standings.png"))); // NOI18N
        jLabel3.setText("Категорії надбання");

        javax.swing.GroupLayout pnlCategoriesLayout = new javax.swing.GroupLayout(pnlCategories);
        pnlCategories.setLayout(pnlCategoriesLayout);
        pnlCategoriesLayout.setHorizontalGroup(
            pnlCategoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCategoriesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlCategoriesLayout.setVerticalGroup(
            pnlCategoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCategoriesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pnlPersonality.setBackground(new java.awt.Color(85, 63, 118));
        pnlPersonality.setPreferredSize(new java.awt.Dimension(224, 78));
        pnlPersonality.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlPersonalityMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/equipo.png"))); // NOI18N
        jLabel2.setText(" Особистості");

        javax.swing.GroupLayout pnlPersonalityLayout = new javax.swing.GroupLayout(pnlPersonality);
        pnlPersonality.setLayout(pnlPersonalityLayout);
        pnlPersonalityLayout.setHorizontalGroup(
            pnlPersonalityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlPersonalityLayout.setVerticalGroup(
            pnlPersonalityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPersonalityLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pnlProperty.setBackground(new java.awt.Color(85, 63, 118));
        pnlProperty.setPreferredSize(new java.awt.Dimension(224, 78));
        pnlProperty.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlPropertyMouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 26)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/seguro.png"))); // NOI18N
        jLabel4.setText("  Надбання");

        javax.swing.GroupLayout pnlPropertyLayout = new javax.swing.GroupLayout(pnlProperty);
        pnlProperty.setLayout(pnlPropertyLayout);
        pnlPropertyLayout.setHorizontalGroup(
            pnlPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPropertyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlPropertyLayout.setVerticalGroup(
            pnlPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPropertyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pnlUsers.setBackground(new java.awt.Color(85, 63, 118));
        pnlUsers.setPreferredSize(new java.awt.Dimension(224, 78));
        pnlUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlUsersMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/red.png"))); // NOI18N
        jLabel5.setText(" Користувачі");

        javax.swing.GroupLayout pnlUsersLayout = new javax.swing.GroupLayout(pnlUsers);
        pnlUsers.setLayout(pnlUsersLayout);
        pnlUsersLayout.setHorizontalGroup(
            pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlUsersLayout.setVerticalGroup(
            pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        btnAdd.setBackground(new java.awt.Color(85, 63, 118));
        btnAdd.setText("Додати");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDel.setBackground(new java.awt.Color(85, 63, 118));
        btnDel.setText("Видалити");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(85, 63, 118));
        btnUpdate.setText("Оновити");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(85, 63, 118));
        btnEdit.setText("Редагувати");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(85, 63, 118));
        btnSearch.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        btnSearch.setText("Пошук");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jBoxSort.setBackground(new java.awt.Color(85, 63, 118));
        jBoxSort.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBoxSort.setFocusCycleRoot(true);

        lblSort.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblSort.setText("Сортування");
        lblSort.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSortMouseClicked(evt);
            }
        });

        btnSort.setBackground(new java.awt.Color(85, 63, 118));
        btnSort.setText("ОК");
        btnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMenuLayout = new javax.swing.GroupLayout(pnlMenu);
        pnlMenu.setLayout(pnlMenuLayout);
        pnlMenuLayout.setHorizontalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBranch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlCategories, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
            .addComponent(pnlProperty, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
            .addComponent(pnlPersonality, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
            .addComponent(pnlUsers, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMenuLayout.createSequentialGroup()
                        .addComponent(jBoxSort, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSort, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMenuLayout.createSequentialGroup()
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addContainerGap())
        );
        pnlMenuLayout.setVerticalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBoxSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSort, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBranch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlPersonality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlProperty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlCategories, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnAdd)
                .addGap(18, 18, 18)
                .addComponent(btnDel)
                .addGap(18, 18, 18)
                .addComponent(btnEdit)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        tbl.setBackground(new java.awt.Color(255, 255, 255));
        tbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tbl.setForeground(new java.awt.Color(0, 0, 0));
        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl.setFocusable(false);
        tbl.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tbl.setRowHeight(25);
        tbl.setSelectionBackground(new java.awt.Color(232, 57, 95));
        tbl.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tbl.setShowVerticalLines(false);
        tbl.getTableHeader().setReorderingAllowed(false);
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tbl);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/hide (1).png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/logout.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlHeadLayout = new javax.swing.GroupLayout(pnlHead);
        pnlHead.setLayout(pnlHeadLayout);
        pnlHeadLayout.setHorizontalGroup(
            pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeadLayout.createSequentialGroup()
                .addComponent(pnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHeadLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1410, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlHeadLayout.setVerticalGroup(
            pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 873, Short.MAX_VALUE)
            .addGroup(pnlHeadLayout.createSequentialGroup()
                .addGroup(pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlHead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlHead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * Галузі
 * @param evt 
 */
    private void pnlBranchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlBranchMouseClicked
        nameTbl = "branch";
        setColor(pnlBranch);
        resetColor(pnlCategories);
        resetColor(pnlPersonality);
        resetColor(pnlUsers);
        resetColor(pnlProperty);
        btnDel.setVisible(true);
        btnSearch.setVisible(true);
        btnSort.setVisible(true);
        lblSort.setVisible(true);
        jBoxSort.setVisible(true);
        btnAdd.setVisible(true);
        btnDel.setVisible(false);
        btnEdit.setVisible(false);
        btnUpdate.setVisible(true);
        //Кооооод
        addPerson(3);
        jBoxSort.removeAllItems();
        jBoxSort.addItem("Не визначено");
        jBoxSort.addItem("Номер по зростанню");
        jBoxSort.addItem("Номер по спаданню");
        jBoxSort.addItem("Назва від А до Я");
        jBoxSort.addItem("Назва від Я до А");
        X=null;
        DB d = new DB();
        d.setMySQL("");
        
    }//GEN-LAST:event_pnlBranchMouseClicked
/**
 * Категорії
 * @param evt 
 */
    private void pnlCategoriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCategoriesMouseClicked
        btnAdd.setVisible(true);
        btnDel.setVisible(false);
        btnEdit.setVisible(false);
        btnUpdate.setVisible(true);
        btnSearch.setVisible(true);
        btnSort.setVisible(true);
        lblSort.setVisible(true);
        jBoxSort.setVisible(true);
        setColor(pnlCategories);
        resetColor(pnlBranch);
        resetColor(pnlPersonality);
        resetColor(pnlUsers);
        resetColor(pnlProperty);
        nameTbl = "categories_of_property";
        addPerson(1);
        jBoxSort.removeAllItems();
        jBoxSort.addItem("Не визначено");
        jBoxSort.addItem("Номер по зростанню");
        jBoxSort.addItem("Номер по спаданню");
        jBoxSort.addItem("Назва від А до Я");
        jBoxSort.addItem("Назва від Я до А");
        X=null;
        DB d = new DB();
        d.setMySQL("");
    }//GEN-LAST:event_pnlCategoriesMouseClicked
/**
 * Особистості
 * @param evt 
 */
    private void pnlPersonalityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlPersonalityMouseClicked
        btnAdd.setVisible(true);
        btnDel.setVisible(false);
        btnEdit.setVisible(false);
        btnUpdate.setVisible(true);
        btnSearch.setVisible(true);
        btnSort.setVisible(true);
        lblSort.setVisible(true);
        jBoxSort.setVisible(true);
        setColor(pnlPersonality);
        resetColor(pnlCategories);
        resetColor(pnlBranch);
        resetColor(pnlUsers);
        resetColor(pnlProperty);
        nameTbl = "personality";
        addPerson(0);
        jBoxSort.removeAllItems();
        jBoxSort.addItem("Не визначено");
        jBoxSort.addItem("Номер по зростанню");
        jBoxSort.addItem("Номер по спаданню");
        jBoxSort.addItem("Галузь по зростанню");
        jBoxSort.addItem("Галузь по спаданню");
        jBoxSort.addItem("ПІБ по зростанню");
        jBoxSort.addItem("ПІБ по спаданню");
        jBoxSort.addItem("Народження по зростанню");
        jBoxSort.addItem("Народження по спаданню");
        jBoxSort.addItem("Смерть по зростанню");
        jBoxSort.addItem("Смерть по спаданню");
        jBoxSort.addItem("Релігія по зростанню");
        jBoxSort.addItem("Релігія по спаданню");
        jBoxSort.addItem("Освіта по зростанню");
        jBoxSort.addItem("Освіта по спаданню");
        jBoxSort.addItem("Біографія по зростанню");
        jBoxSort.addItem("Біографія по спаданню");
        X=null;
        DB d = new DB();
        d.setMySQL("");
    }//GEN-LAST:event_pnlPersonalityMouseClicked

    class myTableCellRenderer implements TableCellRenderer{
        
        public Component getTableCellRendererComponent(JTable table, Object value,boolean isSelected, boolean hasFocus, int row, int column){
          // tbl.setRowHeight(160);
            return (Component) value;
            
        }
}
     private class myCellRenderer extends JTextArea implements TableCellRenderer {
        
        private static final long serialVersionUID = 1L;
        
        private myCellRenderer() {
            super();
            setLineWrap(true);
            setWrapStyleWord(true);
            setBackground(Color.WHITE);
        }
        
        @Override
        public Component getTableCellRendererComponent(JTable table, Object arg1, boolean isSelected, boolean hasFocus, int row, int column) {
        
            data = (String) arg1.toString();
            int lineWidth = this.getFontMetrics(this.getFont()).stringWidth(data);
            int lineHeight = this.getFontMetrics(this.getFont()).getHeight();
            int rowWidth = table.getCellRect(row, column, true).width;
          
            int newRowHeight = (int) ((lineWidth / rowWidth) * (lineHeight)) + lineHeight * (lineHeight-2);
            if (table.getRowHeight(row) != newRowHeight) {
                table.setRowHeight(row, newRowHeight);
                }
            this.setText(data);
            return this;
            
        }
    }
     /**
      * Надбання
      * @param evt 
      */
    private void pnlPropertyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlPropertyMouseClicked
        btnAdd.setVisible(true);
        btnDel.setVisible(false);
        btnEdit.setVisible(false);
        btnUpdate.setVisible(true);
        btnSearch.setVisible(true);
        btnSort.setVisible(true);
        lblSort.setVisible(true);
        jBoxSort.setVisible(true);
        setColor(pnlProperty);
        resetColor(pnlCategories);
        resetColor(pnlBranch);
        resetColor(pnlUsers);
        resetColor(pnlPersonality);
        nameTbl = "property";
        addPerson(2);
        jBoxSort.removeAllItems();
        jBoxSort.addItem("Не визначено");
        jBoxSort.addItem("Код по зростанню");
        jBoxSort.addItem("Код по спаданню");
        jBoxSort.addItem("Особистості по зростанню");
        jBoxSort.addItem("Особистості по спаданню");
        jBoxSort.addItem("Надбання по зростанню");
        jBoxSort.addItem("Надбання по спаданню");
        jBoxSort.addItem("Дата по зростанню");
        jBoxSort.addItem("Дата по спаданню");
        jBoxSort.addItem("Біографія по спаданню");
        jBoxSort.addItem("Біографія по зростанню");
        X=null;
        DB d = new DB();
        d.setMySQL("");
        
    }//GEN-LAST:event_pnlPropertyMouseClicked
/**
 * Користувачі
 * @param evt 
 */
    private void pnlUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlUsersMouseClicked
        btnAdd.setVisible(true);
        btnDel.setVisible(false);
        btnEdit.setVisible(false);
        btnUpdate.setVisible(true);
        btnSearch.setVisible(true);
        btnSort.setVisible(true);
        lblSort.setVisible(true);
        jBoxSort.setVisible(true);
        setColor(pnlUsers);
        resetColor(pnlCategories);
        resetColor(pnlBranch);
        resetColor(pnlProperty);
        resetColor(pnlPersonality);
        nameTbl = "users";
        addPerson(4);
        jBoxSort.removeAllItems();
        jBoxSort.addItem("Не визначено");
        jBoxSort.addItem("Номер по зростанню");
        jBoxSort.addItem("Номер по спаданню");
        jBoxSort.addItem("ПІБ по зростанню");
        jBoxSort.addItem("ПІБ по спаданню");
        jBoxSort.addItem("Логін по зростанню");
        jBoxSort.addItem("Логін по спаданню");
        jBoxSort.addItem("Пароль по зростанню");
        jBoxSort.addItem("Пароль по спаданню");
        X=null;
        DB d = new DB();
        d.setMySQL("");
        
    }//GEN-LAST:event_pnlUsersMouseClicked
/**
 * Клік мишки
 * @param evt 
 */
    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
        btnAdd.setVisible(true);
        btnDel.setVisible(true);
        btnEdit.setVisible(true);
        btnUpdate.setVisible(true);
        int row=tbl.getSelectedRow();
        setIdDel((int) Integer.valueOf(tbl.getValueAt(row, 0)+""));
        nameObj = (String) tbl.getValueAt(row, 1);
        btnDel.setVisible(true);
        if(nameTbl=="personality")
        {
            DB d = new DB();
            setIdDel((int) Integer.valueOf(tbl.getValueAt(row, 0)+""));
            idPeron =Integer.parseInt((String)tbl.getValueAt(row, 1));
            name = (String) tbl.getValueAt(row, 2);
            rel = (String) tbl.getValueAt(row, 5);
            educat =(String) tbl.getValueAt(row, 6) ;
            biog = (String) tbl.getValueAt(row, 7);
            d.GetPhoto(getIdDel());
            setPathPhoto(d.getPhotoPatn());
            born = (String) tbl.getValueAt(row, 3);
            dead = (String) tbl.getValueAt(row, 4);
            bornSplit = born.split("-");
            deadSplit = (dead.split("-"));
            d.GetNameid("id_branch", "branch", idPeron,0);
            nameBranch = d.getNameBranch();
        }
        else if(nameTbl=="property")
        {
            DB d = new DB();
            setIdDel((int) Integer.valueOf(tbl.getValueAt(row, 0)+""));
            idPeron =Integer.parseInt((String)tbl.getValueAt(row, 1));
            idProperty=(Integer.parseInt((String)tbl.getValueAt(row, 2)));
            try{
            born = (String) tbl.getValueAt(row, 3);
            biog = (String) tbl.getValueAt(row, 4);
            bornSplit = born.split("-");
            deadSplit = (dead.split("-"));
            }
            catch(Exception ex){}
            d.GetNameid("id_property", "categories_of_property", idProperty,0);
            d.GetNameid("id_person", "personality", idPeron,1);
        }
        else if(nameTbl=="users")
        {
            setIdDel((int) Integer.valueOf(tbl.getValueAt(row, 0)+""));
            name = (String) tbl.getValueAt(row, 1);
            biog = (String) tbl.getValueAt(row, 2);
            rel = (String) tbl.getValueAt(row, 3);
        }
    }//GEN-LAST:event_tblMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
       Update();
    }//GEN-LAST:event_btnUpdateActionPerformed
/**
 * Оновлення
 * @param evt 
 */
    private void Update()
    {
        DB db = new DB();
        int i = 0, ii = 1;
        if(nameTbl == "branch")
        {  
            ResultSet X = db.GetDataSet("branch");
        try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
            nazvaKolonki[0] = "Номер галузі";
           nazvaKolonki[1] = "Назва галузі";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модель
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.setRowHeight(25);
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
        }
        else if(nameTbl == "categories_of_property")
        {
            ResultSet X = db.GetDataSet("categories_of_property");
            try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
            nazvaKolonki[0] = "Номер категорії";
           nazvaKolonki[1] = "Назва категорії";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модел
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.setRowHeight(25);
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
        }
        else if(nameTbl == "personality")
        {
            ResultSet X = db.GetDataSet("personality");
            try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
           nazvaKolonki[0] = "Номер особистотсі";
           nazvaKolonki[1] = "Номер галузі";
           nazvaKolonki[2] = "ПІБ";
           nazvaKolonki[3] = "Дата народження";
           nazvaKolonki[4] = "Дата смерті";
           nazvaKolonki[5] = "Релігія";
           nazvaKolonki[6] = "Освіта";
           nazvaKolonki[7] = "Коротка біографія";
           nazvaKolonki[8] = "Фото    ";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модель
                    if(j==9){
                        JLabel lbl = new JLabel();
                        ImageIcon image = new ImageIcon(X.getString(j));
                        lbl.setIcon(image);
                        dtm.setValueAt(lbl, ii - 1, 8);
                    }
                }
                ii++;
            }
            tbl.setModel(dtm);
             tbl.getColumn("Фото    ").setCellRenderer(new myTableCellRenderer());
             tbl.getColumn("Коротка біографія").setCellRenderer(new myCellRenderer());
             
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
        }
        else if(nameTbl == "property")
        {
             ResultSet X = db.GetDataSet("property");
        try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
            nazvaKolonki[0] = "Код надбання";
            nazvaKolonki[1] = "Номер особистості";
           nazvaKolonki[2] = "Номер надбання";
           nazvaKolonki[3] = "Дата";
           nazvaKolonki[4] = "Коротка характеристика";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модел
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.getColumn("Коротка характеристика").setCellRenderer(new myCellRenderer());
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
        }
        else if(nameTbl == "users")
        {
            ResultSet X = db.GetDataSet("users");
            try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
           nazvaKolonki[0] = "Номер користувача";
           nazvaKolonki[1] = "ПІБ";
           nazvaKolonki[2] = "Логін";
           nazvaKolonki[3] = "Пароль";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модел
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.setRowHeight(25);
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
        }
    }
    
    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
       DB d = new DB();
        if(nameTbl == "branch"){
                d.del(getIdDel(),nameTbl,"id_branch");
                Update();
                JOptionPane.showMessageDialog(rootPane, "Успішно");
        }
        else if(nameTbl == "categories_of_property")
        {
            d.del(getIdDel(),nameTbl,"id_property");
            Update();
            JOptionPane.showMessageDialog(rootPane, "Успішно");
        }
        else if(nameTbl == "personality")
        {
            d.del(getIdDel(),nameTbl,"id_person");
            Update();
            JOptionPane.showMessageDialog(rootPane, "Успішно");
        }
        else if(nameTbl == "property")
        {
            d.del(getIdDel(),nameTbl,"id_pro");
             Update();
            JOptionPane.showMessageDialog(rootPane, "Успішно");
        }
        else if(nameTbl == "users")
        {
            d.del(getIdDel(),nameTbl,"id_user");
            Update();
            JOptionPane.showMessageDialog(rootPane, "Успішно");
        }
    }//GEN-LAST:event_btnDelActionPerformed
/**
 * Додавання
 * @param evt 
 */
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
         DB d = new DB();
        if(nameTbl == "branch"){
           String text = JOptionPane.showInputDialog(rootPane, "Введіть назву галузі", "Додавання", 
                JOptionPane. QUESTION_MESSAGE);
           try{
           if(text.trim().length()>0&&text.trim().length()<150)
           {
           d.GetInfo("name_branch", "branch", text);
           if(d.getAddName()== "Такого нема")
           {
               try{
               d.MyInsert("branch", text);
               JOptionPane.showMessageDialog(rootPane, "Успішно");
               Update();
               }
               catch(Exception ex)
               {
               
               }
           }
           else{
               
               JOptionPane.showMessageDialog(rootPane, "Така галузь існує");
           }
            }
           else if(text.trim().length()>150)
           {
           JOptionPane.showMessageDialog(rootPane, "Введено більше ніж 150 символів, повторіть спробу");
           }
           else
           {
               JOptionPane.showMessageDialog(rootPane, "Введіть коректні дані");
           }
           }
           catch(Exception ex)
           {
           
           }
        }
        else if(nameTbl == "categories_of_property")
        {
            String text = JOptionPane.showInputDialog(rootPane, "Введіть назву категорії надбання", "Додавання", 
                JOptionPane. QUESTION_MESSAGE);
           try{
           if(text.trim().length()>0&&text.trim().length()<150)
           {
           d.GetInfo("name_property", "categories_of_property", text);
           if(d.getAddName()== "Такого нема")
           {
               
               d.MyInsert("categories_of_property", text);
               JOptionPane.showMessageDialog(rootPane, "Успішно");
               Update();
               
               
           }
           else{
               
               JOptionPane.showMessageDialog(rootPane, "Така категорія існує");
           }
            }
           else if(text.trim().length()>150)
           {
           JOptionPane.showMessageDialog(rootPane, "Введено більше ніж 150 символів, повторіть спробу");
           }
           else
           {
               JOptionPane.showMessageDialog(rootPane, "Введіть коректні дані");
           }
           }
           catch(Exception ex)
           {
           
           }
        }
        else if(nameTbl == "personality")
        {
           this.setVisible(false);
           InsertPerson in = new InsertPerson();
           in.setVisible(true);
        }
        else if(nameTbl == "property")
        {
          this.setVisible(false);
          InsertProperty in = new InsertProperty();
          in.setVisible(true);
        }
        else if(nameTbl == "users")
        {
            
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        DB d = new DB();
        if(nameTbl == "branch"){
          String z = JOptionPane.showInputDialog(rootPane, "Введіть нове значення замість: "+nameObj, "Редагування", 
                JOptionPane. QUESTION_MESSAGE);
          if(z.trim().length()>0&&z.trim().length()<150)
           {
           d.GetInfo("name_branch", "branch", z);
           if(d.getAddName()== "Такого нема")
           {
               try{
               d.UpdateData("branch", z, getIdDel());
               JOptionPane.showMessageDialog(rootPane, "Успішно");
               Update();
               }
               catch(Exception ex)
               {
               
               }
           }
           else{
               
               JOptionPane.showMessageDialog(rootPane, "Така галузь існує");
           }
            }
           else if(z.trim().length()>150)
           {
           JOptionPane.showMessageDialog(rootPane, "Введено більше ніж 150 символів, повторіть спробу");
           }
        }
        else if(nameTbl == "categories_of_property")
        {
           String z = JOptionPane.showInputDialog(rootPane, "Введіть нове значення замість: "+nameObj, "Редагування", 
                JOptionPane. QUESTION_MESSAGE);
          if(z.trim().length()>0&&z!=nameObj)
          {
              d.GetInfo("name_property", "categories_of_property", z);
           if(d.getAddName()== "Такого нема")
           {
               try{
               d.UpdateData("categories_of_property", z, getIdDel());
               JOptionPane.showMessageDialog(rootPane, "Успішно");
               Update();
               }
               catch(Exception ex)
               {
               
               }
           }
           else{
               
               JOptionPane.showMessageDialog(rootPane, "Така категорія існує");
           }
          }
           else if(z.trim().length()>150)
           {
           JOptionPane.showMessageDialog(rootPane, "Введено більше ніж 150 символів, повторіть спробу");
           }
        }
        else if(nameTbl == "personality")
        { 
            setStart(1);
            this.setVisible(false);
            InsertPerson ip = new InsertPerson();
            ip.setVisible(true);
        }
        else if(nameTbl == "property")
        {
            setStart(1);
            this.setVisible(false);
            InsertProperty ip = new InsertProperty();
            ip.setVisible(true);
        }
        else if(nameTbl == "users")
        {
            Authorization a = new Authorization();
            a.editUser();
            this.setVisible(false);
            a.setVisible(true);
            
        }
    }//GEN-LAST:event_btnEditActionPerformed
/**
 * Пошук
 * @param evt 
 */
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
       DB db = new DB();
       if(nameTbl=="personality")
       {
       nameCat = JOptionPane.showInputDialog(rootPane, "Введіть ПІБ");
        X = db.Search("personality","PIB", nameCat);
         int i = 0, ii = 1;
        try {
            //Персони
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
           nazvaKolonki[0] = "Номер особистотсі";
           nazvaKolonki[1] = "Номер галузі";
           nazvaKolonki[2] = "ПІБ";
           nazvaKolonki[3] = "Дата народження";
           nazvaKolonki[4] = "Дата смерті";
           nazvaKolonki[5] = "Релігія";
           nazvaKolonki[6] = "Освіта";
           nazvaKolonki[7] = "Коротка біографія";
           nazvaKolonki[8] = "Фото    ";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модель
                    if(j==9){
                        lbl = new JLabel();
                        ImageIcon image = new ImageIcon(X.getString(j));
                        lbl.setIcon(image);
                        dtm.setValueAt(lbl, ii - 1, 8);
                    }
                }
                ii++;
            }
            tbl.setModel(dtm);
             tbl.getColumn("Фото    ").setCellRenderer(new myTableCellRenderer());
             tbl.getColumn("Коротка біографія").setCellRenderer(new myCellRenderer());
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
       
       }
       
       else if(nameTbl=="branch")
       {
       nameCat = JOptionPane.showInputDialog(rootPane, "Введіть ім'я категорії");
       X = db.Search("branch","name_branch", nameCat);
            int i = 0, ii = 1;
        try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
            nazvaKolonki[0] = "Номер галузі";
           nazvaKolonki[1] = "Назва галузі";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модел
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.setRowHeight(25);
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
       }
        else if(nameTbl=="property")
       {
        nameCat = JOptionPane.showInputDialog(rootPane, "Введіть частину бажаної характеристики");
         X = db.Search("property","short_characteristic", nameCat);
            int i = 0, ii = 1;
        try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
            nazvaKolonki[0] = "Код надбання";
            nazvaKolonki[1] = "Номер особистості";
           nazvaKolonki[2] = "Номер надбання";
           nazvaKolonki[3] = "Дата";
           nazvaKolonki[4] = "Коротка характеристика";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модел
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.getColumn("Коротка характеристика").setCellRenderer(new myCellRenderer());
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
       }
        else if(nameTbl=="categories_of_property")
       {
       nameCat = JOptionPane.showInputDialog(rootPane, "Введіть ім'я категорії");
         X = db.Search("categories_of_property","name_property", nameCat);
         int i = 0, ii = 1;
        try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
            nazvaKolonki[0] = "Номер категорії";
           nazvaKolonki[1] = "Назва категорії";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модел
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.setRowHeight(25);
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
       }
        else if(nameTbl=="users")
       {
        nameCat = JOptionPane.showInputDialog(rootPane, "Введіть ПІБ користувача");
         X = db.Search("users","PIB", nameCat);
                int i = 0, ii = 1;
        try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
           nazvaKolonki[0] = "Номер користувача";
           nazvaKolonki[1] = "ПІБ";
           nazvaKolonki[2] = "Логін";
           nazvaKolonki[3] = "Пароль";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модел
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.setRowHeight(25);
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
       }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void lblSortMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSortMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblSortMouseClicked
/**
 * Сортування даних
 * @param evt 
 */
    private void btnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortActionPerformed
        ///Коооооооод
         DB d = new DB();
        if(nameTbl == "branch")
        {
            if(jBoxSort.getSelectedItem()=="Номер по зростанню")
            {
                if(d.getMySQL()=="")
                {
                  X = d.Sort("branch", "id_branch",0,"");
                }
                else
                {
                    X = d.Sort("branch", "id_branch",2, d.getMySQL());
                }
                  
            }
            else if(jBoxSort.getSelectedItem()=="Номер по спаданню"){
                if(d.getMySQL()=="")
                {
                    X = d.Sort("branch", "id_branch",1,"");
                }
                else
                {
                    X = d.Sort("branch", "id_branch",3, d.getMySQL());
                }
            }
            if(jBoxSort.getSelectedItem()=="Назва від А до Я")
            {
                if(d.getMySQL()=="")
                {
                  X = d.Sort("branch", "name_branch",0,"");
                }
                 else
                {
                    X = d.Sort("branch", "name_branch",2, d.getMySQL());
                }
                
            }
            else if(jBoxSort.getSelectedItem()=="Назва від Я до А"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("branch", "name_branch",1,"");
                }
                 else
                {
                    X = d.Sort("branch", "name_branch",3, d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Не визначено")
            {
                if(d.getMySQL()=="")
                {    
                 X = d.GetDataSet("branch");
                }
                 else
                {
                    X = d.Search("branch","name_branch", nameCat);
                }
            }
        int i = 0, ii = 1;
        try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
            nazvaKolonki[0] = "Номер галузі";
           nazvaKolonki[1] = "Назва галузі";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модел
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.setRowHeight(25);
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
        }
        else if(nameTbl == "categories_of_property")
        {
             if(jBoxSort.getSelectedItem()=="Номер по зростанню")
            {
                 if(d.getMySQL()=="")
                {
                 X = d.Sort("categories_of_property", "id_property",0,"");
                }
                 else
                {
                    X = d.Sort("categories_of_property", "id_property",2,d.getMySQL());
                }
                  
            }
            else if(jBoxSort.getSelectedItem()=="Номер по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("categories_of_property", "id_property",1,"");
                }
                 else
                {
                    X = d.Sort("categories_of_property", "id_property",3,d.getMySQL());
                }
            }
            if(jBoxSort.getSelectedItem()=="Назва від А до Я")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("categories_of_property", "name_property",0,"");
                }
                 else
                {
                    X = d.Sort("categories_of_property", "name_property",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Назва від Я до А"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("categories_of_property", "name_property",1,"");
                }
                 else
                {
                    X = d.Sort("categories_of_property", "name_property",3,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Не визначено")
            {
                if(d.getMySQL()=="")
                {    
                 X = d.GetDataSet("categories_of_property");
                }
                 else
                {
                    X = d.Search("categories_of_property","name_property", nameCat);
                }
            }
            int i = 0, ii = 1;
        try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
            nazvaKolonki[0] = "Номер категорії";
           nazvaKolonki[1] = "Назва категорії";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модел
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.setRowHeight(25);
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
            
        }
        else if(nameTbl == "personality")
        {
            
             if(jBoxSort.getSelectedItem()=="Номер по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "id_person",0,"");
                }
                 else
                {
                    X = d.Sort("personality", "id_person",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Номер по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "id_person",1,"");
                 
                }
                 else
                {
                     X = d.Sort("personality", "id_person",3,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Галузь по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "id_branch",0,"");
                }
                 else
                {
                    X = d.Sort("personality", "id_branch",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Галузь по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "id_branch",1,"");
                }
                 else
                {
                    X = d.Sort("personality", "id_branch",3,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="ПІБ по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "PIB",0,"");
                }
                 else
                {
                    X = d.Sort("personality", "PIB",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="ПІБ по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "PIB",1,"");
                }
                 else
                {
                    X = d.Sort("personality", "PIB",3,d.getMySQL());
                }
            }
             else if(jBoxSort.getSelectedItem()=="Народження по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "born",0,"");
                }
                 else
                {
                    X = d.Sort("personality", "born",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Народження по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "born",1,"");
                }
                 else
                {
                    X = d.Sort("personality", "born",3,d.getMySQL());
                }
            }
             
             else if(jBoxSort.getSelectedItem()=="Смерть по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "dead",0,"");
                }
                 else
                {
                    X = d.Sort("personality", "dead",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Смерть по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "dead",1,"");
                }
                 else
                {
                    X = d.Sort("personality", "dead",3,d.getMySQL());
                }
            }
             else if(jBoxSort.getSelectedItem()=="Релігія по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "religion",0,"");
                }
                 else
                {
                    X = d.Sort("personality", "religion",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Релігія по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "religion",1,"");
                }
                 else
                {
                    X = d.Sort("religion", "name_property",3,d.getMySQL());
                } 
            }
             else if(jBoxSort.getSelectedItem()=="Освіта по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "education",0,"");
                }
                 else
                {
                    X = d.Sort("personality", "education",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Освіта по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "education",1,"");
                }
                 else
                {
                    X = d.Sort("personality", "education",3,d.getMySQL());
                }
            }
             else if(jBoxSort.getSelectedItem()=="Біографія по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "short_biography",0,"");
                }
                 else
                {
                    X = d.Sort("personality", "short_biography",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Біографія по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("personality", "short_biography",1,"");
                }
                 else
                {
                    X = d.Sort("personality", "short_biography",3,d.getMySQL());
                }
            }
             else if(jBoxSort.getSelectedItem()=="Не визначено")
            {
                if(d.getMySQL()=="")
                {    
                 X = d.GetDataSet("personality");
                }
                 else
                {
                    X = d.Search("personality","PIB", nameCat);
                }
                 
            }
             int i = 0, ii = 1;
        try {
            //Персони
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
           nazvaKolonki[0] = "Номер особистотсі";
           nazvaKolonki[1] = "Номер галузі";
           nazvaKolonki[2] = "ПІБ";
           nazvaKolonki[3] = "Дата народження";
           nazvaKolonki[4] = "Дата смерті";
           nazvaKolonki[5] = "Релігія";
           nazvaKolonki[6] = "Освіта";
           nazvaKolonki[7] = "Коротка біографія";
           nazvaKolonki[8] = "Фото    ";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модель
                    if(j==9){
                        lbl = new JLabel();
                        ImageIcon image = new ImageIcon(X.getString(j));
                        lbl.setIcon(image);
                        dtm.setValueAt(lbl, ii - 1, 8);
                    }
                }
                ii++;
            }
            tbl.setModel(dtm);
             tbl.getColumn("Фото    ").setCellRenderer(new myTableCellRenderer());
             tbl.getColumn("Коротка біографія").setCellRenderer(new myCellRenderer());
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
            
            
        }
        else if(nameTbl == "property")
        {
            if(jBoxSort.getSelectedItem()=="Код по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("property", "id_pro",0,"");
                }
                 else
                {
                    X = d.Sort("property", "id_pro",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Код по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("property", "id_pro",1,"");
                }
                 else
                {
                    X = d.Sort("property", "id_pro",3,d.getMySQL());
                }
            }
           else if(jBoxSort.getSelectedItem()=="Особистості по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("property", "id_person",0,"");
                }
                 else
                {
                    X = d.Sort("property", "id_person",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Особистості по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("property", "id_person",1,"");
                }
                 else
                {
                    X = d.Sort("property", "id_person",3,d.getMySQL());
                }
            }
            
            else if(jBoxSort.getSelectedItem()=="Надбання по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("property", "id_property",0,"");
                }
                 else
                {
                    X = d.Sort("property", "id_property",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Надбання по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("property", "id_property",1,"");
                }
                 else
                {
                    X = d.Sort("property", "id_property",3,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Дата по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("property", "year",0,"");
                }
                 else
                {
                    X = d.Sort("property", "year",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Дата по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("property", "year",1,"");
                }
                 else
                {
                    X = d.Sort("property", "year",3,d.getMySQL());
                }
            }
             else if(jBoxSort.getSelectedItem()=="Біографія по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("property", "short_characteristic",0,"");
                }
                 else
                {
                    X = d.Sort("property", "short_characteristic",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Біографія по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("property", "short_biography",1,"");
                }
                 else
                {
                    X = d.Sort("property", "short_biography",3,d.getMySQL());
                }
            }
             else if(jBoxSort.getSelectedItem()=="Не визначено")
            {
                if(d.getMySQL()=="")
                {    
                 X = d.GetDataSet("property");
                }
                 else
                {
                    X = d.Search("property","short_characteristic", nameCat);
                }
                 
            }
            
            int i = 0, ii = 1;
        try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
            nazvaKolonki[0] = "Код надбання";
            nazvaKolonki[1] = "Номер особистості";
           nazvaKolonki[2] = "Номер надбання";
           nazvaKolonki[3] = "Дата";
           nazvaKolonki[4] = "Коротка характеристика";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модел
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.getColumn("Коротка характеристика").setCellRenderer(new myCellRenderer());
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
            
        }
        else if(nameTbl == "users")
        {
             if(jBoxSort.getSelectedItem()=="Номер по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("users", "id_user",0,"");
                }
                 else
                {
                    X = d.Sort("users", "id_user",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Номер по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("users", "id_user",1,"");
                }
                 else
                {
                    X = d.Sort("users", "id_user",3,d.getMySQL());
                }
            }
           else if(jBoxSort.getSelectedItem()=="ПІБ по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("users", "PIB",0,"");
                }
                 else
                {
                    X = d.Sort("users", "PIB",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="ПІБ по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("users", "PIB",1,"");
                }
                 else
                {
                    X = d.Sort("users", "PIB",3,d.getMySQL());
                }
            }
            
            else if(jBoxSort.getSelectedItem()=="Логін по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("users", "login",0,"");
                }
                 else
                {
                    X = d.Sort("users", "login",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Логін по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("users", "login",1,"");
                }
                 else
                {
                    X = d.Sort("users", "login",3,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Пароль по зростанню")
            {
                if(d.getMySQL()=="")
                {
                 X = d.Sort("users", "password",0,"");
                }
                 else
                {
                    X = d.Sort("users", "password",2,d.getMySQL());
                }
            }
            else if(jBoxSort.getSelectedItem()=="Пароль по спаданню"){
                if(d.getMySQL()=="")
                {
                 X = d.Sort("users", "password",1,"");
                }
                 else
                {
                    X = d.Sort("users", "password",3,d.getMySQL());
                }
            }
             else if(jBoxSort.getSelectedItem()=="Не визначено")
            {
                 if(d.getMySQL()=="")
                {    
                 X = d.GetDataSet("users");
                }
                 else
                {
                    X = d.Search("users","PIB", nameCat);
                }
                 
            }
             int i = 0, ii = 1;
        try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
           nazvaKolonki[0] = "Номер користувача";
           nazvaKolonki[1] = "ПІБ";
           nazvaKolonki[2] = "Логін";
           nazvaKolonki[3] = "Пароль";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модел
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.setRowHeight(25);
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
        }
    }//GEN-LAST:event_btnSortActionPerformed

    private void tblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseEntered
         
    }//GEN-LAST:event_tblMouseEntered

    private void tblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMousePressed

       
    }//GEN-LAST:event_tblMousePressed
/**
 * Згортає вікно
 * @param evt 
 */
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        this.setState(this.ICONIFIED);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        dispose();
        Authorization a = new Authorization();
        a.setVisible(true);
    }//GEN-LAST:event_jLabel6MouseClicked
     
    
    /**
     * Робить форму видимою
     */
    public  void Use() {
        start = 0;
        this.setVisible(true);
        Update();
    }
      /**
       * \
       * @param count Використовується для визначення таблиці
       */
    void addPerson(int count){
        DB db = new DB();
        if(count == 0)
        {
            X = db.GetDataSet("personality");
        int i = 0, ii = 1;
        try {
            //Персони
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
           nazvaKolonki[0] = "Номер особистості";
           nazvaKolonki[1] = "Номер галузі";
           nazvaKolonki[2] = "ПІБ";
           nazvaKolonki[3] = "Дата народження";
           nazvaKolonki[4] = "Дата смерті";
           nazvaKolonki[5] = "Релігія";
           nazvaKolonki[6] = "Освіта";
           nazvaKolonki[7] = "Коротка біографія";
           nazvaKolonki[8] = "Фото    ";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модель
                    if(j==9){
                        lbl = new JLabel();
                        ImageIcon image = new ImageIcon(X.getString(j));
                        lbl.setIcon(image);
                        dtm.setValueAt(lbl, ii - 1, 8);
                    }
                }
                ii++;
            }
             tbl.setModel(dtm);
             tbl.getColumn("Фото    ").setCellRenderer(new myTableCellRenderer());
             tbl.getColumn("Коротка біографія").setCellRenderer(new myCellRenderer());
            // tbl.getColumn("Номер особистості").setPreferredWidth(35);
             tbl.getColumnModel().getColumn(8).setPreferredWidth(170);
             tbl.getColumnModel().getColumn(7).setPreferredWidth(150);
             tbl.getColumnModel().getColumn(2).setPreferredWidth(150);
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
      }
        else if(count == 1)
        {
            //Категорії надбань
        ResultSet X = db.GetDataSet("categories_of_property");
        int i = 0, ii = 1;
        try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
            nazvaKolonki[0] = "Номер категорії";
           nazvaKolonki[1] = "Назва категорії";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модел
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.setRowHeight(25);
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
        
        }
        else if(count == 2)
        {
            //надбання
        ResultSet X = db.GetDataSet("property");
        int i = 0, ii = 1;
        try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
            nazvaKolonki[0] = "Код надбання";
            nazvaKolonki[1] = "Номер особистості";
           nazvaKolonki[2] = "Номер надбання";
           nazvaKolonki[3] = "Дата";
           nazvaKolonki[4] = "Коротка характеристика";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модел
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.getColumn("Коротка характеристика").setCellRenderer(new myCellRenderer());
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
        }
        else if(count == 3)
        {
            //Галузі
        ResultSet X = db.GetDataSet("branch");
        int i = 0, ii = 1;
        try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
            nazvaKolonki[0] = "Номер галузі";
           nazvaKolonki[1] = "Назва галузі";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модел
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.setRowHeight(25);
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
        }
        else if(count == 4)    
        {
        ResultSet X = db.GetDataSet("users");
        int i = 0, ii = 1;
        try {
            ResultSetMetaData colonki = X.getMetaData();
            i = colonki.getColumnCount();
            javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
            dtm.setColumnCount(i);//
            String nazvaKolonki[] = new String[i];
           nazvaKolonki[0] = "Номер користувача";
           nazvaKolonki[1] = "ПІБ";
           nazvaKolonki[2] = "Логін";
           nazvaKolonki[3] = "Пароль";
            dtm.setColumnIdentifiers(nazvaKolonki);
            dtm.setRowCount(0);//
            while (X.next()) {
                dtm.setRowCount(dtm.getRowCount() + 1);
                for (int j = 1; j <= i; j++) {
                    String g = X.getString(j);
                    dtm.setValueAt(g, ii - 1, j - 1);//виводимо дані у модел
                }
                ii++;
            }
            tbl.setModel(dtm);
            tbl.setRowHeight(25);
        } catch (Exception ex) {
            Logger.getLogger(Viev.class.getName()).log(Level.SEVERE, null, ex);
            //  txtRez.setText(ex.getMessage());
        }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Viev.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Viev.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Viev.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Viev.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Viev().setVisible(true);
            }
        });
    }
    
    void setColor(JPanel p)
    {
        p.setBackground(new Color(128, 0, 128));
    }
    void resetColor(JPanel p){
        p.setBackground(new Color(85,63,118));
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSort;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> jBoxSort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBranch;
    private javax.swing.JLabel lblSort;
    private javax.swing.JPanel pnlBranch;
    private javax.swing.JPanel pnlCategories;
    private javax.swing.JPanel pnlHead;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlPersonality;
    private javax.swing.JPanel pnlProperty;
    private javax.swing.JPanel pnlUsers;
    private javax.swing.JTable tbl;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the nameBranch
     */
    public static String getNameBranch() {
        return nameBranch;
    }

    /**
     * @param aNameBranch the nameBranch to set
     */
    public static void setNameBranch(String aNameBranch) {
        nameBranch = aNameBranch;
    }
}
