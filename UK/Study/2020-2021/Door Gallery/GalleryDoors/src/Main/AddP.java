/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ximik
 */
public class AddP extends javax.swing.JFrame {

    /**
     * @return the variantStart
     */
    public static int getVariantStart() {
        return variantStart;
    }

    /**
     * @param aVariantStart the variantStart to set
     */
    public static void setVariantStart(int aVariantStart) {
        variantStart = aVariantStart;
    }

    DataB a = new DataB();
    ResultSet X = null;
    private static int variantStart = 0;

    /**
     * Creates new form frmAdd
     */
    public AddP() {
        initComponents();
        MoveMouseListener mml = new MoveMouseListener(pnlHead, this);
        pnlHead.addMouseListener(mml);
        pnlHead.addMouseMotionListener(mml);
        this.setLocationRelativeTo(null);
        if (variantStart == 0) {
            lblTitle.setText("Додати");
            getJCM();
        } else if (variantStart == 1) //Редагування
        {
            lblTitle.setText("Редагувати");
            getJCM();
            X = null;
            X = a.GetParam("SELECT * FROM Door WHERE name = " + "'" + frmShow.getNames() + "';");
            try {
                while (X.next()) {
                    String name = X.getString(2);
                    String app = X.getString(3);
                    String type = X.getString(4);
                    String style = X.getString(5);
                    String coating = X.getString(6);
                    String size = X.getString(7);
                    String mt = X.getString(8);

                    txtName.setText(name);
                    txtApp.setText(app);
                    jcmType.setSelectedItem(type);
                    jcmStyle.setSelectedItem(style);
                    jcmCoating.setSelectedItem(coating);
                    txtSize.setText(size);
                    jcmMaterial.setSelectedItem(mt);

                }
            } catch (SQLException ex) {
                Logger.getLogger(AddP.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    void getJCM() {
        X = null;
        jcmMaterial.removeAllItems();
        X = a.GetParam("SELECT name FROM Material;");
        try {
            while (X.next()) {
                String g = X.getString(1);
                jcmMaterial.addItem(g);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddP.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        X = null;
        jcmCoating.removeAllItems();
        X = a.GetParam("SELECT name FROM Coating;");
        try {
            while (X.next()) {
                String g = X.getString(1);
                jcmCoating.addItem(g);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddP.class.getName()).log(Level.SEVERE, null, ex);
        }

        X = null;
        jcmStyle.removeAllItems();
        X = a.GetParam("SELECT name FROM Style;");
        try {
            while (X.next()) {
                String g = X.getString(1);
                jcmStyle.addItem(g);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddP.class.getName()).log(Level.SEVERE, null, ex);
        }

        X = null;
        jcmType.removeAllItems();
        X = a.GetParam("SELECT name FROM Type;");
        try {
            while (X.next()) {
                String g = X.getString(1);
                jcmType.addItem(g);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        pnlHead = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        txtApp = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtSize = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jcmMaterial = new javax.swing.JComboBox<>();
        jcmStyle = new javax.swing.JComboBox<>();
        jcmType = new javax.swing.JComboBox<>();
        jcmCoating = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        pnlMain.setBackground(new java.awt.Color(143, 93, 100));
        pnlMain.setForeground(new java.awt.Color(102, 204, 255));

        pnlHead.setBackground(new java.awt.Color(143, 36, 72));

        lblTitle.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("Додати");

        btnExit.setBackground(new java.awt.Color(143, 36, 72));
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/close.png"))); // NOI18N
        btnExit.setBorder(null);
        btnExit.setBorderPainted(false);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlHeadLayout = new javax.swing.GroupLayout(pnlHead);
        pnlHead.setLayout(pnlHeadLayout);
        pnlHeadLayout.setHorizontalGroup(
            pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeadLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlHeadLayout.setVerticalGroup(
            pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeadLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        txtName.setBackground(new java.awt.Color(143, 93, 100));
        txtName.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtName.setForeground(new java.awt.Color(255, 255, 255));
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Назва");

        btnSave.setBackground(new java.awt.Color(143, 36, 72));
        btnSave.setFont(new java.awt.Font("Times New Roman", 0, 28)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/diskette.png"))); // NOI18N
        btnSave.setText("Зберегти");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Призначення");

        txtApp.setBackground(new java.awt.Color(143, 93, 100));
        txtApp.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtApp.setForeground(new java.awt.Color(255, 255, 255));
        txtApp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAppKeyTyped(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Тип");

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Стиль");

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Покриття");

        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Розмір");

        txtSize.setBackground(new java.awt.Color(143, 93, 100));
        txtSize.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtSize.setForeground(new java.awt.Color(255, 255, 255));
        txtSize.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSizeKeyTyped(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Матеріал");

        jcmMaterial.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        jcmStyle.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        jcmType.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        jcmCoating.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlHead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18))
                        .addGap(47, 47, 47)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtApp)
                            .addComponent(jcmType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50))))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel20)
                            .addComponent(jLabel22)
                            .addComponent(jLabel19))
                        .addGap(85, 85, 85)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcmStyle, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcmMaterial, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSize)
                            .addComponent(jcmCoating, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addComponent(pnlHead, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcmType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcmStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcmCoating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcmMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSave)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        variantStart = 0;
        frmShow.setStatus(0);
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed

    }//GEN-LAST:event_txtNameKeyPressed

    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped
        if (txtName.getText().length() >= 200) {// limit to 3 characters
            evt.consume();
        }
    }//GEN-LAST:event_txtNameKeyTyped

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (txtName.getText().length() > 0 && txtApp.getText().length() > 0 && txtSize.getText().length() > 0) {
            DataB d = new DataB();
            d.GetInd("SELECT name FROM Door WHERE `name` = '" + txtName.getText() + "';");
            if (variantStart == 0) {
                if (d.getAddName() == "Такого нема") {
                    d.InsertData("Door", txtName.getText(), txtApp.getText(), jcmType.getSelectedItem() + "",
                            jcmStyle.getSelectedItem() + "", jcmCoating.getSelectedItem() + "", txtSize.getText(), jcmMaterial.getSelectedItem().toString());
                    JOptionPane.showMessageDialog(rootPane, "Успішно");
                    frmShow.setStatus(0);
                    dispose();
                    frmShow.GetData("Door");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Двері існують, повторіть спробу", "Помилка", 2);
                }
            } else if (variantStart == 1) {
                if (d.getAddName() == "Такого нема" || txtName.getText().equals(frmShow.getNames()) == true) {
                    d.Update("Door", txtName.getText(), txtApp.getText(), jcmType.getSelectedItem() + "",
                            jcmStyle.getSelectedItem() + "", jcmCoating.getSelectedItem() + "", txtSize.getText(), jcmMaterial.getSelectedItem().toString());
                    JOptionPane.showMessageDialog(rootPane, "Успішно");
                    frmShow.setStatus(0);
                    frmShow.GetData("Door");
                    dispose();

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Двері існують, повторіть спробу", "Помилка", 2);
                }
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Заповніть всі поля", "Помилка", 2);
        }
        frmShow.setNames("");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtAppKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAppKeyTyped
//        char c = evt.getKeyChar();
//        if ((!Character.isDigit(c)
//                || (c == KeyEvent.VK_BACK_SPACE)
//                || (c == KeyEvent.VK_DELETE)
//                || (txtApp.getText().length() >= 7))) {
//            evt.consume();
//        }
    }//GEN-LAST:event_txtAppKeyTyped

    private void txtSizeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSizeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSizeKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> jcmCoating;
    private javax.swing.JComboBox<String> jcmMaterial;
    private javax.swing.JComboBox<String> jcmStyle;
    private javax.swing.JComboBox<String> jcmType;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlHead;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JTextField txtApp;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSize;
    // End of variables declaration//GEN-END:variables
}
