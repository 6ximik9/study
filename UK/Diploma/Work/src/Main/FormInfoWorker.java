/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import com.itextpdf.text.Document;
import java.awt.Color;
import java.io.File;
import java.io.FileOutputStream;
import java.text.DecimalFormat;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import org.apache.poi.xwpf.usermodel.XWPFTable;
import org.apache.poi.xwpf.usermodel.XWPFTableCell;
import org.apache.poi.xwpf.usermodel.XWPFTableRow;

/**
 *
 * @author ximik
 */
public class FormInfoWorker extends javax.swing.JFrame {

    /**
     * Creates new form frmInfoZ
     */
    private String formatD;
    private String formatS;

    public static int TypeWorker = 0;

    public FormInfoWorker() {
        initComponents();
        MoveMouseListener mml = new MoveMouseListener(pnlHead, this);
        pnlHead.addMouseListener(mml);
        pnlHead.addMouseMotionListener(mml);
        this.setLocationRelativeTo(null);
        tblInfo.setDefaultEditor(Object.class, null);
        tblInfo.setBackground(Color.WHITE);
        tblInfoV.setDefaultEditor(Object.class, null);
        tblInfoV.setBackground(Color.WHITE);
        lblTitle.setText(FormMain.getNameP());

        lblZmin.setText("Кількість відпрацьованих змін: " + FormDataRequest.getCountDay());
        double c = Double.parseDouble(FormDataRequest.getWeight());
        formatD = new DecimalFormat("#0.00").format(c);
        
        if (FormDataRequest.getCategory() == 1) {
            
            lblWeight.setText("Кількість вироблених кілограм: " + formatD);
            
        }
        else if(FormDataRequest.getCategory() == 2)
        {
             lblWeight.setText("Сума продажу: " + formatD);
        }
        
        double Salary = Double.parseDouble(FormDataRequest.getSal());
            formatS = new DecimalFormat("#0.00").format(Salary);
            
        lblSalary.setText("Рекомендована зарплата: " + formatS);
        tblInfo.setAutoCreateRowSorter(true);
        tblInfoV.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        btnExport = new javax.swing.JButton();
        lblSalary1 = new javax.swing.JLabel();
        pnlHead = new javax.swing.JPanel();
        lblTitle1 = new javax.swing.JLabel();
        lblExit = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblZmin = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        lblSalary = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblInfoV = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInfo = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        pnlMain.setBackground(new java.awt.Color(240, 219, 189));

        btnExport.setBackground(new java.awt.Color(120, 101, 84));
        btnExport.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnExport.setForeground(new java.awt.Color(255, 255, 255));
        btnExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/file-7.png"))); // NOI18N
        btnExport.setText("Експорт");
        btnExport.setMaximumSize(new java.awt.Dimension(70, 70));
        btnExport.setMinimumSize(new java.awt.Dimension(70, 70));
        btnExport.setPreferredSize(new java.awt.Dimension(70, 50));
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        lblSalary1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblSalary1.setForeground(new java.awt.Color(70, 43, 25));
        lblSalary1.setText("Додаткові виплати");

        pnlHead.setBackground(new java.awt.Color(70, 43, 25));

        lblTitle1.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        lblTitle1.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle1.setText("Статистика по працівнику");

        lblExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo/exit-2.png"))); // NOI18N
        lblExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblExitMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout pnlHeadLayout = new javax.swing.GroupLayout(pnlHead);
        pnlHead.setLayout(pnlHeadLayout);
        pnlHeadLayout.setHorizontalGroup(
            pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHeadLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 353, Short.MAX_VALUE)
                .addComponent(lblExit, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlHeadLayout.setVerticalGroup(
            pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeadLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(lblExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        lblTitle.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(70, 43, 25));
        lblTitle.setText("Іванов Іван Іванович");

        lblZmin.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblZmin.setForeground(new java.awt.Color(70, 43, 25));
        lblZmin.setText("Кількість відпрацьованих змін: ");

        lblWeight.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblWeight.setForeground(new java.awt.Color(70, 43, 25));
        lblWeight.setText("Кількість вироблених кілограм: ");

        lblSalary.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblSalary.setForeground(new java.awt.Color(70, 43, 25));
        lblSalary.setText("Рекомендована зарплата: ");

        tblInfoV.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        tblInfoV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblInfoV.setRowHeight(25);
        tblInfoV.setSelectionBackground(new java.awt.Color(240, 219, 189));
        tblInfoV.setSelectionForeground(new java.awt.Color(70, 43, 25));
        jScrollPane2.setViewportView(tblInfoV);

        tblInfo.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        tblInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblInfo.setRowHeight(25);
        tblInfo.setSelectionBackground(new java.awt.Color(240, 219, 189));
        tblInfo.setSelectionForeground(new java.awt.Color(70, 43, 25));
        jScrollPane1.setViewportView(tblInfo);

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlHead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblZmin))
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblWeight))
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblSalary))
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSalary1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addGap(190, 190, 190))
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(452, 452, 452)
                .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addComponent(pnlHead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblZmin)
                .addGap(11, 11, 11)
                .addComponent(lblWeight)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblSalary)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lblSalary1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed

        String path = "";
        JFileChooser j = new JFileChooser();
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = j.showSaveDialog(this);
        if (x == JFileChooser.APPROVE_OPTION) {
            path = j.getSelectedFile().getPath();
        }
        
        if (path != null && path != "") {
           
            createDoc(path);
        }
    }//GEN-LAST:event_btnExportActionPerformed

    private void lblExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseClicked
        dispose();
        FormMain.setDateRequest(0);
    }//GEN-LAST:event_lblExitMouseClicked

    private void lblExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseEntered

    }//GEN-LAST:event_lblExitMouseEntered

    /**
     * Створення документу
     * @param path Шлях
     */
    void createDoc(String path) {
        try {
            XWPFDocument document = new XWPFDocument();
            FileOutputStream out = new FileOutputStream(new File(path + "/" + lblTitle.getText() + ".docx"));
            //JOptionPane.showMessageDialog(rootPane, path + "/" + lblTitle.getText() + ".docx");
            XWPFParagraph paragraph = document.createParagraph();
            XWPFRun run = paragraph.createRun();
            run.setFontSize(14);
            run.setFontFamily("Times New Roman");
            run.setText("Статистика працівника - " + lblTitle.getText());
            paragraph.setSpacingAfter(200);
            //create table

            XWPFTable table = document.createTable();
            table.setCellMargins(200, 200, 200, 200);

            //create first row
            XWPFTableRow tableRowOne = table.getRow(0);
            XWPFTableCell cell0 = tableRowOne.getCell(0);
            cell0.removeParagraph(0);
            XWPFParagraph p = cell0.addParagraph();
            XWPFRun run1 = p.createRun();
            p.setAlignment(ParagraphAlignment.CENTER);
            run1.setFontSize(14);
            run1.setFontFamily("Times New Roman");
            run1.setText("Дата");

            XWPFTableCell cell1 = tableRowOne.createCell();
            cell1.removeParagraph(0);
            //  cell1.setText("Кілограми");
            p = cell1.addParagraph();
            run1 = p.createRun();
            p.setAlignment(ParagraphAlignment.CENTER);
            run1.setFontSize(14);
            run1.setFontFamily("Times New Roman");
            run1.setText("Кілограми");

            XWPFTableCell cell2 = tableRowOne.createCell();
            cell2.removeParagraph(0);
            // cell2.setText("Заробітна плата");
            p = cell2.addParagraph();
            p.setAlignment(ParagraphAlignment.CENTER);
            run1 = p.createRun();
            run1.setFontSize(14);
            run1.setFontFamily("Times New Roman");
            run1.setText("Заробітна плата");
            for (int i = 0; i < tblInfo.getRowCount(); i++) {
                XWPFTableRow tableRow = table.createRow();
                XWPFTableCell cell01 = tableRow.getCell(0);
                cell01.removeParagraph(0);
                p = cell01.addParagraph();
                p.setAlignment(ParagraphAlignment.CENTER);
                run1 = p.createRun();
                run1.setFontSize(14);
                run1.setFontFamily("Times New Roman");
                run1.setText(tblInfo.getModel().getValueAt(i, 0).toString());

                XWPFTableCell cell02 = tableRow.getCell(1);
                cell02.removeParagraph(0);
                p = cell02.addParagraph();
                p.setAlignment(ParagraphAlignment.CENTER);
                run1 = p.createRun();
                run1.setFontSize(14);
                run1.setFontFamily("Times New Roman");
                run1.setText(tblInfo.getModel().getValueAt(i, 1).toString());
                XWPFTableCell cell03 = tableRow.getCell(2);
                cell03.removeParagraph(0);
                p = cell03.addParagraph();
                p.setAlignment(ParagraphAlignment.CENTER);
                run1 = p.createRun();
                run1.setFontSize(14);
                run1.setFontFamily("Times New Roman");
                run1.setText(tblInfo.getModel().getValueAt(i, 2).toString());
            }
            
            XWPFTableRow tableRow = table.createRow();
            XWPFTableCell cell01 = tableRow.getCell(0);
            cell01.removeParagraph(0);
            p = cell01.addParagraph();
            p.setAlignment(ParagraphAlignment.CENTER);
            run1 = p.createRun();
            run1.setFontSize(14);
            run1.setBold(true);
            run1.setFontFamily("Times New Roman");
            run1.setText("Всього");

            XWPFTableCell cell02 = tableRow.getCell(1);
            cell02.removeParagraph(0);
            p = cell02.addParagraph();
            p.setAlignment(ParagraphAlignment.CENTER);
            run1 = p.createRun();
            run1.setFontSize(14);
            run1.setBold(true);
            run1.setFontFamily("Times New Roman");
            run1.setText(formatD + " кг.");

            XWPFTableCell cell03 = tableRow.getCell(2);
            cell03.removeParagraph(0);
            p = cell03.addParagraph();
            p.setAlignment(ParagraphAlignment.CENTER);
            run1 = p.createRun();
            run1.setBold(true);
            run1.setFontSize(14);
            run1.setFontFamily("Times New Roman");

            run1.setText(formatS + " грн.");

            XWPFParagraph paragraph2 = document.createParagraph();
            XWPFRun run2 = paragraph2.createRun();
            run2.setFontSize(14);
            run2.setFontFamily("Times New Roman");
            run2.setText("Додаткові виплати");
            paragraph2.setSpacingBefore(200);
            paragraph2.setSpacingAfter(200);

            XWPFTable table2 = document.createTable();
            table2.setCellMargins(200, 200, 200, 200);

            //create first row
            XWPFTableRow tableRowOnePay = table2.getRow(0);
            XWPFTableCell cellPay0 = tableRowOnePay.getCell(0);
            cellPay0.removeParagraph(0);
            XWPFParagraph pPay = cellPay0.addParagraph();
            XWPFRun runPay1 = pPay.createRun();
            pPay.setAlignment(ParagraphAlignment.CENTER);
            runPay1.setFontSize(14);
            runPay1.setFontFamily("Times New Roman");
            runPay1.setText("Дата");

            XWPFTableCell cellPay1 = tableRowOnePay.createCell();
            cellPay1.removeParagraph(0);
            //  cell1.setText("Кілограми");
            pPay = cellPay1.addParagraph();
            runPay1 = pPay.createRun();
            pPay.setAlignment(ParagraphAlignment.CENTER);
            runPay1.setFontSize(14);
            runPay1.setFontFamily("Times New Roman");
            runPay1.setText("Тип");

            XWPFTableCell cellPay2 = tableRowOnePay.createCell();
            cellPay2.removeParagraph(0);
            // cell2.setText("Заробітна плата");
            pPay = cellPay2.addParagraph();
            pPay.setAlignment(ParagraphAlignment.CENTER);
            runPay1 = pPay.createRun();
            runPay1.setFontSize(14);
            runPay1.setFontFamily("Times New Roman");
            runPay1.setText("Сумма");
            //Запис в таблицю
            double sal = 0;//Заробітна плата
            for (int i = 0; i < tblInfoV.getRowCount(); i++) {
                XWPFTableRow tableRowPay = table2.createRow();
                XWPFTableCell cellPay01 = tableRowPay.getCell(0);
                cellPay01.removeParagraph(0);
                pPay = cellPay01.addParagraph();
                pPay.setAlignment(ParagraphAlignment.CENTER);
                runPay1 = pPay.createRun();
                runPay1.setFontSize(14);
                runPay1.setFontFamily("Times New Roman");
                runPay1.setText(tblInfoV.getModel().getValueAt(i, 0).toString());

                XWPFTableCell cellPay02 = tableRowPay.getCell(1);
                cellPay02.removeParagraph(0);
                pPay = cellPay02.addParagraph();
                pPay.setAlignment(ParagraphAlignment.CENTER);
                runPay1 = pPay.createRun();
                runPay1.setFontSize(14);
                runPay1.setFontFamily("Times New Roman");
                runPay1.setText(tblInfoV.getModel().getValueAt(i, 1).toString());

                XWPFTableCell cellPay03 = tableRowPay.getCell(2);
                cellPay03.removeParagraph(0);
                pPay = cellPay03.addParagraph();
                pPay.setAlignment(ParagraphAlignment.CENTER);
                runPay1 = pPay.createRun();
                runPay1.setFontSize(14);
                runPay1.setFontFamily("Times New Roman");
                runPay1.setText(tblInfoV.getModel().getValueAt(i, 2).toString());
                sal += Double.parseDouble(tblInfoV.getModel().getValueAt(i, 2).toString());
            }
            //Рядок Всього
            XWPFTableRow tableRowPay = table2.createRow();
            XWPFTableCell cellPay01 = tableRowPay.getCell(0);
            cellPay01.removeParagraph(0);
            pPay = cellPay01.addParagraph();
            pPay.setAlignment(ParagraphAlignment.CENTER);
            runPay1 = pPay.createRun();
            runPay1.setFontSize(14);
            runPay1.setBold(true);
            runPay1.setFontFamily("Times New Roman");
            runPay1.setText("Всього");

            XWPFTableCell cellPay02 = tableRowPay.getCell(1);
            cellPay02.removeParagraph(0);
            pPay = cellPay02.addParagraph();
            pPay.setAlignment(ParagraphAlignment.CENTER);
            runPay1 = pPay.createRun();
            runPay1.setFontSize(14);
            runPay1.setBold(true);
            runPay1.setFontFamily("Times New Roman");

            XWPFTableCell cellPay03 = tableRowPay.getCell(2);
            cellPay03.removeParagraph(0);
            pPay = cellPay03.addParagraph();
            pPay.setAlignment(ParagraphAlignment.CENTER);
            runPay1 = pPay.createRun();
            runPay1.setBold(true);
            runPay1.setFontSize(14);
            runPay1.setFontFamily("Times New Roman");

            runPay1.setText(sal + " грн.");

            document.write(out);
            out.close();
            JOptionPane.showMessageDialog(rootPane, "Успішно", "Повідомлення", 1);
        } catch (Exception ex) {

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormInfoWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormInfoWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormInfoWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormInfoWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormInfoWorker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblExit;
    private javax.swing.JLabel lblSalary;
    private javax.swing.JLabel lblSalary1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel lblZmin;
    private javax.swing.JPanel pnlHead;
    private javax.swing.JPanel pnlMain;
    public static javax.swing.JTable tblInfo;
    public static javax.swing.JTable tblInfoV;
    // End of variables declaration//GEN-END:variables
}
